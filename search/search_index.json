{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"siddhi-execution-extrema The siddhi-execution-extrema extension is an extension to Siddhi that processes event streams based on different arithmetic properties. Different types of processors are available to extract the extremas from the event streams according to the specified attribute in the stream. Find some useful links below: Source code Releases Issue tracker Latest API Docs Latest API Docs is 5.0.0 . How to use Using the extension in WSO2 Stream Processor You can use this extension in the latest WSO2 Stream Processor that is a part of WSO2 Analytics offering, with editor, debugger and simulation support. This extension is shipped by default with WSO2 Stream Processor, if you wish to use an alternative version of this extension you can replace the component jar that can be found in the STREAM_PROCESSOR_HOME /lib directory. Using the extension as a java library This extension can be added as a maven dependency along with other Siddhi dependencies to your project. dependency groupId org.wso2.extension.siddhi.execution.extrema /groupId artifactId siddhi-execution-extrema /artifactId version x.x.x /version /dependency Jenkins Build Status Branch Build Status master Features bottomK ( Stream Processor ) bottomK counts the frequency of different values for a specified attribute, and returns the number of least frequently occurring values. The events are returned only if there is a change in the 'bottomK' results for each chunk of received events. bottomKLengthBatch ( Stream Processor ) bottomKLengthBatch counts the frequency of different values of a specified attribute inside a batch window, and returns the number of least frequently occurring values. The bottom K frequency values are returned per batch. bottomKTimeBatch ( Stream Processor ) bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occurring values. Events are output only if there is a change in the bottomK results for each chunk of received events. kalmanMinMax ( Stream Processor ) kalmanMinMax uses the Kalman filter to smooth the values of the time series in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum values for the specified attribute within the given window length, with the extrema type as min or max as relevant. kernelMinMax ( Stream Processor ) kernelMinMax uses Gaussian Kernel to smooth values of the series within the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum values for the specified attribute within the given window length, with the extrema type as min or max as relevant. minMax ( Stream Processor ) minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. topK ( Stream Processor ) topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. topKLengthBatch ( Stream Processor ) topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. topKTimeBatch ( Stream Processor ) topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. maxByLength ( Window ) maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. maxByLengthBatch ( Window ) maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. maxbytime ( Window ) maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. maxbytimebatch ( Window ) maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. minByLength ( Window ) minByLength derives the minimum value for the given attribute in the specified sliding window. minByLengthBatch ( Window ) minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. minbytime ( Window ) minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. minbytimebatch ( Window ) minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. How to Contribute Please report issues at GitHub Issue Tracker . Send your contributions as pull requests to master branch . Contact us Post your questions with the \"Siddhi\" tag in Stackoverflow . Siddhi developers can be contacted via the mailing lists: Developers List : dev@wso2.org Architecture List : architecture@wso2.org Support We are committed to ensuring support for this extension in production. Our unique approach ensures that all support leverages our open development methodology and is provided by the very same engineers who build the technology. For more details and to take advantage of this unique opportunity contact us via http://wso2.com/support/ .","title":"Welcome"},{"location":"#siddhi-execution-extrema","text":"The siddhi-execution-extrema extension is an extension to Siddhi that processes event streams based on different arithmetic properties. Different types of processors are available to extract the extremas from the event streams according to the specified attribute in the stream. Find some useful links below: Source code Releases Issue tracker","title":"siddhi-execution-extrema"},{"location":"#latest-api-docs","text":"Latest API Docs is 5.0.0 .","title":"Latest API Docs"},{"location":"#how-to-use","text":"Using the extension in WSO2 Stream Processor You can use this extension in the latest WSO2 Stream Processor that is a part of WSO2 Analytics offering, with editor, debugger and simulation support. This extension is shipped by default with WSO2 Stream Processor, if you wish to use an alternative version of this extension you can replace the component jar that can be found in the STREAM_PROCESSOR_HOME /lib directory. Using the extension as a java library This extension can be added as a maven dependency along with other Siddhi dependencies to your project. dependency groupId org.wso2.extension.siddhi.execution.extrema /groupId artifactId siddhi-execution-extrema /artifactId version x.x.x /version /dependency","title":"How to use"},{"location":"#jenkins-build-status","text":"Branch Build Status master","title":"Jenkins Build Status"},{"location":"#features","text":"bottomK ( Stream Processor ) bottomK counts the frequency of different values for a specified attribute, and returns the number of least frequently occurring values. The events are returned only if there is a change in the 'bottomK' results for each chunk of received events. bottomKLengthBatch ( Stream Processor ) bottomKLengthBatch counts the frequency of different values of a specified attribute inside a batch window, and returns the number of least frequently occurring values. The bottom K frequency values are returned per batch. bottomKTimeBatch ( Stream Processor ) bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occurring values. Events are output only if there is a change in the bottomK results for each chunk of received events. kalmanMinMax ( Stream Processor ) kalmanMinMax uses the Kalman filter to smooth the values of the time series in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum values for the specified attribute within the given window length, with the extrema type as min or max as relevant. kernelMinMax ( Stream Processor ) kernelMinMax uses Gaussian Kernel to smooth values of the series within the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum values for the specified attribute within the given window length, with the extrema type as min or max as relevant. minMax ( Stream Processor ) minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. topK ( Stream Processor ) topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. topKLengthBatch ( Stream Processor ) topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. topKTimeBatch ( Stream Processor ) topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. maxByLength ( Window ) maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. maxByLengthBatch ( Window ) maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. maxbytime ( Window ) maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. maxbytimebatch ( Window ) maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. minByLength ( Window ) minByLength derives the minimum value for the given attribute in the specified sliding window. minByLengthBatch ( Window ) minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. minbytime ( Window ) minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. minbytimebatch ( Window ) minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it.","title":"Features"},{"location":"#how-to-contribute","text":"Please report issues at GitHub Issue Tracker . Send your contributions as pull requests to master branch .","title":"How to Contribute"},{"location":"#contact-us","text":"Post your questions with the \"Siddhi\" tag in Stackoverflow . Siddhi developers can be contacted via the mailing lists: Developers List : dev@wso2.org Architecture List : architecture@wso2.org","title":"Contact us"},{"location":"#support","text":"We are committed to ensuring support for this extension in production. Our unique approach ensures that all support leverages our open development methodology and is provided by the very same engineers who build the technology. For more details and to take advantage of this unique opportunity contact us via http://wso2.com/support/ .","title":"Support"},{"location":"license/","text":"Copyright (c) 2017 WSO2 Inc. ( http://www.wso2.org ) All Rights Reserved. WSO2 Inc. licenses this file to you under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. ------------------------------------------------------------------------- Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. License shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. Licensor shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. Legal Entity shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, control means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. You (or Your ) shall mean an individual or Legal Entity exercising permissions granted by this License. Source form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. Object form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. Work shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). Derivative Works shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. Contribution shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, submitted means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as Not a Contribution. Contributor shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a NOTICE text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an AS IS BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS","title":"License"},{"location":"api/4.0.10/","text":"API Docs - v4.0.10 Extrema bottomK (Stream Processor) bottomK counts the frequency of different values for a specified attribute, and outputs the specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of bottom frequencies required. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomK(item, 3) insert all events into outputStream;) This query outputs the three items with the lowest frequency counts. bottomKLengthBatch (Stream Processor) bottomKLengthBatc counts the frequency of different values of a specified attribute inside a batch window, and returns the specified number of least frequently occuring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are output, and the window is reset. bottomKTimeBatch (Stream Processor) bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occuring values that must be returned. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into outputStream;) This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset. kalmanMinMax (Stream Processor) kalmanMinMax uses the Kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into outputStream;) This query returns the minimum values for a set of price values. kernelMinMax (Stream Processor) kernelMinMax uses Gaussian Kernel to smooth the time series values in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kernelMinMax(price, 3, 7, ?max?) select * insert into outputStream; This query returns the maximum values for a set of price values. minMax (Stream Processor) minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from inputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into outputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from inputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into outputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from inputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into outputStream; This query returns both the minimum values and the maximum values found within a set of price values. topK (Stream Processor) topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topK(item, 3) insert all events into outputStream;) This query emits the three items with the highest frequency counts. topKLengthBatch (Stream Processor) topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset. topKTimeBatch (Stream Processor) topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into outputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset. maxByLength (Window) maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into outputStream ; This query observes a sliding window of 4 events, and returns the event with the maximum price. maxByLengthBatch (Window) maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset. maxbytime (Window) maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival). maxbytimebatch (Window) maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output. minByLength (Window) minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into outputStream ; This query outputs the minimum price for a sliding length window of four events. minByLengthBatch (Window) minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset. minbytime (Window) minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into outputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated for every event arrival and expiry of every event (after one second of its arrival). minbytimebatch (Window) minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price.","title":"4.0.10"},{"location":"api/4.0.10/#api-docs-v4010","text":"","title":"API Docs - v4.0.10"},{"location":"api/4.0.10/#extrema","text":"","title":"Extrema"},{"location":"api/4.0.10/#bottomk-stream-processor","text":"bottomK counts the frequency of different values for a specified attribute, and outputs the specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of bottom frequencies required. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomK(item, 3) insert all events into outputStream;) This query outputs the three items with the lowest frequency counts.","title":"bottomK (Stream Processor)"},{"location":"api/4.0.10/#bottomklengthbatch-stream-processor","text":"bottomKLengthBatc counts the frequency of different values of a specified attribute inside a batch window, and returns the specified number of least frequently occuring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are output, and the window is reset.","title":"bottomKLengthBatch (Stream Processor)"},{"location":"api/4.0.10/#bottomktimebatch-stream-processor","text":"bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occuring values that must be returned. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into outputStream;) This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset.","title":"bottomKTimeBatch (Stream Processor)"},{"location":"api/4.0.10/#kalmanminmax-stream-processor","text":"kalmanMinMax uses the Kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into outputStream;) This query returns the minimum values for a set of price values.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/4.0.10/#kernelminmax-stream-processor","text":"kernelMinMax uses Gaussian Kernel to smooth the time series values in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kernelMinMax(price, 3, 7, ?max?) select * insert into outputStream; This query returns the maximum values for a set of price values.","title":"kernelMinMax (Stream Processor)"},{"location":"api/4.0.10/#minmax-stream-processor","text":"minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from inputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into outputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from inputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into outputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from inputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into outputStream; This query returns both the minimum values and the maximum values found within a set of price values.","title":"minMax (Stream Processor)"},{"location":"api/4.0.10/#topk-stream-processor","text":"topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topK(item, 3) insert all events into outputStream;) This query emits the three items with the highest frequency counts.","title":"topK (Stream Processor)"},{"location":"api/4.0.10/#topklengthbatch-stream-processor","text":"topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKLengthBatch (Stream Processor)"},{"location":"api/4.0.10/#topktimebatch-stream-processor","text":"topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into outputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKTimeBatch (Stream Processor)"},{"location":"api/4.0.10/#maxbylength-window","text":"maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into outputStream ; This query observes a sliding window of 4 events, and returns the event with the maximum price.","title":"maxByLength (Window)"},{"location":"api/4.0.10/#maxbylengthbatch-window","text":"maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset.","title":"maxByLengthBatch (Window)"},{"location":"api/4.0.10/#maxbytime-window","text":"maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival).","title":"maxbytime (Window)"},{"location":"api/4.0.10/#maxbytimebatch-window","text":"maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output.","title":"maxbytimebatch (Window)"},{"location":"api/4.0.10/#minbylength-window","text":"minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into outputStream ; This query outputs the minimum price for a sliding length window of four events.","title":"minByLength (Window)"},{"location":"api/4.0.10/#minbylengthbatch-window","text":"minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset.","title":"minByLengthBatch (Window)"},{"location":"api/4.0.10/#minbytime-window","text":"minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into outputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated for every event arrival and expiry of every event (after one second of its arrival).","title":"minbytime (Window)"},{"location":"api/4.0.10/#minbytimebatch-window","text":"minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price.","title":"minbytimebatch (Window)"},{"location":"api/4.0.11/","text":"API Docs - v4.0.11 Extrema bottomK (Stream Processor) bottomK counts the frequency of different values for a specified attribute, and outputs the specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of bottom frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomK(item, 3) insert all events into outputStream;) This query outputs the three items with the lowest frequency counts. bottomKLengthBatch (Stream Processor) bottomKLengthBatc counts the frequency of different values of a specified attribute inside a batch window, and returns the specified number of least frequently occuring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are output, and the window is reset. bottomKTimeBatch (Stream Processor) bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occurring values that must be returned. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into outputStream;) This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset. kalmanMinMax (Stream Processor) kalmanMinMax uses the Kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into outputStream;) This query returns the minimum values for a set of price values. kernelMinMax (Stream Processor) kernelMinMax uses Gaussian Kernel to smooth the time series values in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kernelMinMax(price, 3, 7, ?max?) select * insert into outputStream; This query returns the maximum values for a set of price values. minMax (Stream Processor) minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from inputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into outputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from inputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into outputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from inputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into outputStream; This query returns both the minimum values and the maximum values found within a set of price values. topK (Stream Processor) topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topK(item, 3) insert all events into outputStream;) This query emits the three items with the highest frequency counts. topKLengthBatch (Stream Processor) topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset. topKTimeBatch (Stream Processor) topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into outputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset. maxByLength (Window) maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into outputStream ; This query observes a sliding window of 4 events, and returns the event with the maximum price. maxByLengthBatch (Window) maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset. maxbytime (Window) maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival). maxbytimebatch (Window) maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output. minByLength (Window) minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into outputStream ; This query outputs the minimum price for a sliding length window of four events. minByLengthBatch (Window) minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset. minbytime (Window) minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into outputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated for every event arrival and expiry of every event (after one second of its arrival). minbytimebatch (Window) minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price.","title":"4.0.11"},{"location":"api/4.0.11/#api-docs-v4011","text":"","title":"API Docs - v4.0.11"},{"location":"api/4.0.11/#extrema","text":"","title":"Extrema"},{"location":"api/4.0.11/#bottomk-stream-processor","text":"bottomK counts the frequency of different values for a specified attribute, and outputs the specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of bottom frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomK(item, 3) insert all events into outputStream;) This query outputs the three items with the lowest frequency counts.","title":"bottomK (Stream Processor)"},{"location":"api/4.0.11/#bottomklengthbatch-stream-processor","text":"bottomKLengthBatc counts the frequency of different values of a specified attribute inside a batch window, and returns the specified number of least frequently occuring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are output, and the window is reset.","title":"bottomKLengthBatch (Stream Processor)"},{"location":"api/4.0.11/#bottomktimebatch-stream-processor","text":"bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occurring values that must be returned. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into outputStream;) This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset.","title":"bottomKTimeBatch (Stream Processor)"},{"location":"api/4.0.11/#kalmanminmax-stream-processor","text":"kalmanMinMax uses the Kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into outputStream;) This query returns the minimum values for a set of price values.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/4.0.11/#kernelminmax-stream-processor","text":"kernelMinMax uses Gaussian Kernel to smooth the time series values in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kernelMinMax(price, 3, 7, ?max?) select * insert into outputStream; This query returns the maximum values for a set of price values.","title":"kernelMinMax (Stream Processor)"},{"location":"api/4.0.11/#minmax-stream-processor","text":"minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from inputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into outputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from inputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into outputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from inputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into outputStream; This query returns both the minimum values and the maximum values found within a set of price values.","title":"minMax (Stream Processor)"},{"location":"api/4.0.11/#topk-stream-processor","text":"topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topK(item, 3) insert all events into outputStream;) This query emits the three items with the highest frequency counts.","title":"topK (Stream Processor)"},{"location":"api/4.0.11/#topklengthbatch-stream-processor","text":"topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKLengthBatch (Stream Processor)"},{"location":"api/4.0.11/#topktimebatch-stream-processor","text":"topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into outputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKTimeBatch (Stream Processor)"},{"location":"api/4.0.11/#maxbylength-window","text":"maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into outputStream ; This query observes a sliding window of 4 events, and returns the event with the maximum price.","title":"maxByLength (Window)"},{"location":"api/4.0.11/#maxbylengthbatch-window","text":"maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset.","title":"maxByLengthBatch (Window)"},{"location":"api/4.0.11/#maxbytime-window","text":"maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival).","title":"maxbytime (Window)"},{"location":"api/4.0.11/#maxbytimebatch-window","text":"maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output.","title":"maxbytimebatch (Window)"},{"location":"api/4.0.11/#minbylength-window","text":"minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into outputStream ; This query outputs the minimum price for a sliding length window of four events.","title":"minByLength (Window)"},{"location":"api/4.0.11/#minbylengthbatch-window","text":"minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset.","title":"minByLengthBatch (Window)"},{"location":"api/4.0.11/#minbytime-window","text":"minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into outputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated for every event arrival and expiry of every event (after one second of its arrival).","title":"minbytime (Window)"},{"location":"api/4.0.11/#minbytimebatch-window","text":"minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price.","title":"minbytimebatch (Window)"},{"location":"api/4.0.12/","text":"API Docs - v4.0.12 Extrema bottomK (Stream Processor) bottomK counts the frequency of different values for a specified attribute, and outputs the specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of bottom frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomK(item, 3) insert all events into outputStream;) This query outputs the three items with the lowest frequency counts. bottomKLengthBatch (Stream Processor) bottomKLengthBatc counts the frequency of different values of a specified attribute inside a batch window, and returns the specified number of least frequently occuring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are output, and the window is reset. bottomKTimeBatch (Stream Processor) bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occurring values that must be returned. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into outputStream;) This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset. kalmanMinMax (Stream Processor) kalmanMinMax uses the Kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into outputStream;) This query returns the minimum values for a set of price values. kernelMinMax (Stream Processor) kernelMinMax uses Gaussian Kernel to smooth the time series values in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kernelMinMax(price, 3, 7, ?max?) select * insert into outputStream; This query returns the maximum values for a set of price values. minMax (Stream Processor) minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from inputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into outputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from inputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into outputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from inputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into outputStream; This query returns both the minimum values and the maximum values found within a set of price values. topK (Stream Processor) topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topK(item, 3) insert all events into outputStream;) This query emits the three items with the highest frequency counts. topKLengthBatch (Stream Processor) topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset. topKTimeBatch (Stream Processor) topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into outputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset. maxByLength (Window) maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into outputStream ; This query observes a sliding window of 4 events, and returns the event with the maximum price. maxByLengthBatch (Window) maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset. maxbytime (Window) maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival). maxbytimebatch (Window) maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output. minByLength (Window) minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into outputStream ; This query outputs the minimum price for a sliding length window of four events. minByLengthBatch (Window) minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset. minbytime (Window) minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into outputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated for every event arrival and expiry of every event (after one second of its arrival). minbytimebatch (Window) minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price.","title":"4.0.12"},{"location":"api/4.0.12/#api-docs-v4012","text":"","title":"API Docs - v4.0.12"},{"location":"api/4.0.12/#extrema","text":"","title":"Extrema"},{"location":"api/4.0.12/#bottomk-stream-processor","text":"bottomK counts the frequency of different values for a specified attribute, and outputs the specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of bottom frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomK(item, 3) insert all events into outputStream;) This query outputs the three items with the lowest frequency counts.","title":"bottomK (Stream Processor)"},{"location":"api/4.0.12/#bottomklengthbatch-stream-processor","text":"bottomKLengthBatc counts the frequency of different values of a specified attribute inside a batch window, and returns the specified number of least frequently occuring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are output, and the window is reset.","title":"bottomKLengthBatch (Stream Processor)"},{"location":"api/4.0.12/#bottomktimebatch-stream-processor","text":"bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occurring values that must be returned. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into outputStream;) This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset.","title":"bottomKTimeBatch (Stream Processor)"},{"location":"api/4.0.12/#kalmanminmax-stream-processor","text":"kalmanMinMax uses the Kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into outputStream;) This query returns the minimum values for a set of price values.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/4.0.12/#kernelminmax-stream-processor","text":"kernelMinMax uses Gaussian Kernel to smooth the time series values in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kernelMinMax(price, 3, 7, ?max?) select * insert into outputStream; This query returns the maximum values for a set of price values.","title":"kernelMinMax (Stream Processor)"},{"location":"api/4.0.12/#minmax-stream-processor","text":"minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from inputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into outputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from inputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into outputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from inputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into outputStream; This query returns both the minimum values and the maximum values found within a set of price values.","title":"minMax (Stream Processor)"},{"location":"api/4.0.12/#topk-stream-processor","text":"topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topK(item, 3) insert all events into outputStream;) This query emits the three items with the highest frequency counts.","title":"topK (Stream Processor)"},{"location":"api/4.0.12/#topklengthbatch-stream-processor","text":"topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKLengthBatch (Stream Processor)"},{"location":"api/4.0.12/#topktimebatch-stream-processor","text":"topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into outputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKTimeBatch (Stream Processor)"},{"location":"api/4.0.12/#maxbylength-window","text":"maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into outputStream ; This query observes a sliding window of 4 events, and returns the event with the maximum price.","title":"maxByLength (Window)"},{"location":"api/4.0.12/#maxbylengthbatch-window","text":"maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset.","title":"maxByLengthBatch (Window)"},{"location":"api/4.0.12/#maxbytime-window","text":"maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival).","title":"maxbytime (Window)"},{"location":"api/4.0.12/#maxbytimebatch-window","text":"maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output.","title":"maxbytimebatch (Window)"},{"location":"api/4.0.12/#minbylength-window","text":"minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into outputStream ; This query outputs the minimum price for a sliding length window of four events.","title":"minByLength (Window)"},{"location":"api/4.0.12/#minbylengthbatch-window","text":"minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset.","title":"minByLengthBatch (Window)"},{"location":"api/4.0.12/#minbytime-window","text":"minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into outputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated for every event arrival and expiry of every event (after one second of its arrival).","title":"minbytime (Window)"},{"location":"api/4.0.12/#minbytimebatch-window","text":"minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price.","title":"minbytimebatch (Window)"},{"location":"api/4.0.13/","text":"API Docs - v4.0.13 Extrema bottomK (Stream Processor) bottomK counts the frequency of different values for a specified attribute, and outputs the specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of bottom frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomK(item, 3) insert all events into outputStream;) This query outputs the three items with the lowest frequency counts. bottomKLengthBatch (Stream Processor) bottomKLengthBatc counts the frequency of different values of a specified attribute inside a batch window, and returns the specified number of least frequently occuring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are output, and the window is reset. bottomKTimeBatch (Stream Processor) bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occurring values that must be returned. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into outputStream;) This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset. kalmanMinMax (Stream Processor) kalmanMinMax uses the Kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into outputStream;) This query returns the minimum values for a set of price values. kernelMinMax (Stream Processor) kernelMinMax uses Gaussian Kernel to smooth the time series values in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kernelMinMax(price, 3, 7, ?max?) select * insert into outputStream; This query returns the maximum values for a set of price values. minMax (Stream Processor) minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from inputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into outputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from inputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into outputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from inputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into outputStream; This query returns both the minimum values and the maximum values found within a set of price values. topK (Stream Processor) topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topK(item, 3) insert all events into outputStream;) This query emits the three items with the highest frequency counts. topKLengthBatch (Stream Processor) topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset. topKTimeBatch (Stream Processor) topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into outputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset. maxByLength (Window) maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into outputStream ; This query observes a sliding window of 4 events, and returns the event with the maximum price. maxByLengthBatch (Window) maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset. maxbytime (Window) maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival). maxbytimebatch (Window) maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output. minByLength (Window) minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into outputStream ; This query outputs the minimum price for a sliding length window of four events. minByLengthBatch (Window) minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset. minbytime (Window) minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into outputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated for every event arrival and expiry of every event (after one second of its arrival). minbytimebatch (Window) minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price.","title":"4.0.13"},{"location":"api/4.0.13/#api-docs-v4013","text":"","title":"API Docs - v4.0.13"},{"location":"api/4.0.13/#extrema","text":"","title":"Extrema"},{"location":"api/4.0.13/#bottomk-stream-processor","text":"bottomK counts the frequency of different values for a specified attribute, and outputs the specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of bottom frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomK(item, 3) insert all events into outputStream;) This query outputs the three items with the lowest frequency counts.","title":"bottomK (Stream Processor)"},{"location":"api/4.0.13/#bottomklengthbatch-stream-processor","text":"bottomKLengthBatc counts the frequency of different values of a specified attribute inside a batch window, and returns the specified number of least frequently occuring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are output, and the window is reset.","title":"bottomKLengthBatch (Stream Processor)"},{"location":"api/4.0.13/#bottomktimebatch-stream-processor","text":"bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occurring values that must be returned. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into outputStream;) This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset.","title":"bottomKTimeBatch (Stream Processor)"},{"location":"api/4.0.13/#kalmanminmax-stream-processor","text":"kalmanMinMax uses the Kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into outputStream;) This query returns the minimum values for a set of price values.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/4.0.13/#kernelminmax-stream-processor","text":"kernelMinMax uses Gaussian Kernel to smooth the time series values in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kernelMinMax(price, 3, 7, ?max?) select * insert into outputStream; This query returns the maximum values for a set of price values.","title":"kernelMinMax (Stream Processor)"},{"location":"api/4.0.13/#minmax-stream-processor","text":"minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from inputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into outputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from inputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into outputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from inputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into outputStream; This query returns both the minimum values and the maximum values found within a set of price values.","title":"minMax (Stream Processor)"},{"location":"api/4.0.13/#topk-stream-processor","text":"topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topK(item, 3) insert all events into outputStream;) This query emits the three items with the highest frequency counts.","title":"topK (Stream Processor)"},{"location":"api/4.0.13/#topklengthbatch-stream-processor","text":"topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKLengthBatch (Stream Processor)"},{"location":"api/4.0.13/#topktimebatch-stream-processor","text":"topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into outputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKTimeBatch (Stream Processor)"},{"location":"api/4.0.13/#maxbylength-window","text":"maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into outputStream ; This query observes a sliding window of 4 events, and returns the event with the maximum price.","title":"maxByLength (Window)"},{"location":"api/4.0.13/#maxbylengthbatch-window","text":"maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset.","title":"maxByLengthBatch (Window)"},{"location":"api/4.0.13/#maxbytime-window","text":"maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival).","title":"maxbytime (Window)"},{"location":"api/4.0.13/#maxbytimebatch-window","text":"maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output.","title":"maxbytimebatch (Window)"},{"location":"api/4.0.13/#minbylength-window","text":"minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into outputStream ; This query outputs the minimum price for a sliding length window of four events.","title":"minByLength (Window)"},{"location":"api/4.0.13/#minbylengthbatch-window","text":"minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset.","title":"minByLengthBatch (Window)"},{"location":"api/4.0.13/#minbytime-window","text":"minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into outputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated for every event arrival and expiry of every event (after one second of its arrival).","title":"minbytime (Window)"},{"location":"api/4.0.13/#minbytimebatch-window","text":"minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price.","title":"minbytimebatch (Window)"},{"location":"api/4.0.14/","text":"API Docs - v4.0.14 Extrema bottomK (Stream Processor) bottomK counts the frequency of different values for a specified attribute, and outputs the specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of bottom frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomK(item, 3) insert all events into outputStream;) This query outputs the three items with the lowest frequency counts. bottomKLengthBatch (Stream Processor) bottomKLengthBatc counts the frequency of different values of a specified attribute inside a batch window, and returns the specified number of least frequently occuring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are output, and the window is reset. bottomKTimeBatch (Stream Processor) bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occurring values that must be returned. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into outputStream;) This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset. kalmanMinMax (Stream Processor) kalmanMinMax uses the Kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into outputStream;) This query returns the minimum values for a set of price values. kernelMinMax (Stream Processor) kernelMinMax uses Gaussian Kernel to smooth the time series values in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kernelMinMax(price, 3, 7, ?max?) select * insert into outputStream; This query returns the maximum values for a set of price values. minMax (Stream Processor) minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from inputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into outputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from inputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into outputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from inputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into outputStream; This query returns both the minimum values and the maximum values found within a set of price values. topK (Stream Processor) topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topK(item, 3) insert all events into outputStream;) This query emits the three items with the highest frequency counts. topKLengthBatch (Stream Processor) topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset. topKTimeBatch (Stream Processor) topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into outputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset. maxByLength (Window) maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into outputStream ; This query observes a sliding window of 4 events, and returns the event with the maximum price. maxByLengthBatch (Window) maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset. maxbytime (Window) maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival). maxbytimebatch (Window) maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output. minByLength (Window) minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into outputStream ; This query outputs the minimum price for a sliding length window of four events. minByLengthBatch (Window) minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset. minbytime (Window) minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into outputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated for every event arrival and expiry of every event (after one second of its arrival). minbytimebatch (Window) minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price.","title":"4.0.14"},{"location":"api/4.0.14/#api-docs-v4014","text":"","title":"API Docs - v4.0.14"},{"location":"api/4.0.14/#extrema","text":"","title":"Extrema"},{"location":"api/4.0.14/#bottomk-stream-processor","text":"bottomK counts the frequency of different values for a specified attribute, and outputs the specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of bottom frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomK(item, 3) insert all events into outputStream;) This query outputs the three items with the lowest frequency counts.","title":"bottomK (Stream Processor)"},{"location":"api/4.0.14/#bottomklengthbatch-stream-processor","text":"bottomKLengthBatc counts the frequency of different values of a specified attribute inside a batch window, and returns the specified number of least frequently occuring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are output, and the window is reset.","title":"bottomKLengthBatch (Stream Processor)"},{"location":"api/4.0.14/#bottomktimebatch-stream-processor","text":"bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occurring values that must be returned. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into outputStream;) This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset.","title":"bottomKTimeBatch (Stream Processor)"},{"location":"api/4.0.14/#kalmanminmax-stream-processor","text":"kalmanMinMax uses the Kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into outputStream;) This query returns the minimum values for a set of price values.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/4.0.14/#kernelminmax-stream-processor","text":"kernelMinMax uses Gaussian Kernel to smooth the time series values in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kernelMinMax(price, 3, 7, ?max?) select * insert into outputStream; This query returns the maximum values for a set of price values.","title":"kernelMinMax (Stream Processor)"},{"location":"api/4.0.14/#minmax-stream-processor","text":"minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from inputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into outputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from inputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into outputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from inputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into outputStream; This query returns both the minimum values and the maximum values found within a set of price values.","title":"minMax (Stream Processor)"},{"location":"api/4.0.14/#topk-stream-processor","text":"topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topK(item, 3) insert all events into outputStream;) This query emits the three items with the highest frequency counts.","title":"topK (Stream Processor)"},{"location":"api/4.0.14/#topklengthbatch-stream-processor","text":"topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKLengthBatch (Stream Processor)"},{"location":"api/4.0.14/#topktimebatch-stream-processor","text":"topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into outputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKTimeBatch (Stream Processor)"},{"location":"api/4.0.14/#maxbylength-window","text":"maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into outputStream ; This query observes a sliding window of 4 events, and returns the event with the maximum price.","title":"maxByLength (Window)"},{"location":"api/4.0.14/#maxbylengthbatch-window","text":"maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset.","title":"maxByLengthBatch (Window)"},{"location":"api/4.0.14/#maxbytime-window","text":"maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival).","title":"maxbytime (Window)"},{"location":"api/4.0.14/#maxbytimebatch-window","text":"maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output.","title":"maxbytimebatch (Window)"},{"location":"api/4.0.14/#minbylength-window","text":"minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into outputStream ; This query outputs the minimum price for a sliding length window of four events.","title":"minByLength (Window)"},{"location":"api/4.0.14/#minbylengthbatch-window","text":"minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset.","title":"minByLengthBatch (Window)"},{"location":"api/4.0.14/#minbytime-window","text":"minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into outputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated for every event arrival and expiry of every event (after one second of its arrival).","title":"minbytime (Window)"},{"location":"api/4.0.14/#minbytimebatch-window","text":"minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price.","title":"minbytimebatch (Window)"},{"location":"api/4.0.15/","text":"API Docs - v4.0.15 Extrema bottomK (Stream Processor) bottomK counts the frequency of different values for a specified attribute, and outputs the specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of bottom frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomK(item, 3) insert all events into outputStream;) This query outputs the three items with the lowest frequency counts. bottomKLengthBatch (Stream Processor) bottomKLengthBatc counts the frequency of different values of a specified attribute inside a batch window, and returns the specified number of least frequently occuring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are output, and the window is reset. bottomKTimeBatch (Stream Processor) bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occurring values that must be returned. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into outputStream;) This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset. kalmanMinMax (Stream Processor) kalmanMinMax uses the Kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into outputStream;) This query returns the minimum values for a set of price values. kernelMinMax (Stream Processor) kernelMinMax uses Gaussian Kernel to smooth the time series values in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kernelMinMax(price, 3, 7, ?max?) select * insert into outputStream; This query returns the maximum values for a set of price values. minMax (Stream Processor) minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from inputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into outputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from inputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into outputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from inputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into outputStream; This query returns both the minimum values and the maximum values found within a set of price values. topK (Stream Processor) topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topK(item, 3) insert all events into outputStream;) This query emits the three items with the highest frequency counts. topKLengthBatch (Stream Processor) topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset. topKTimeBatch (Stream Processor) topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into outputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset. maxByLength (Window) maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into outputStream ; This query observes a sliding window of 4 events, and returns the event with the maximum price. maxByLengthBatch (Window) maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset. maxbytime (Window) maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival). maxbytimebatch (Window) maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output. minByLength (Window) minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into outputStream ; This query outputs the minimum price for a sliding length window of four events. minByLengthBatch (Window) minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset. minbytime (Window) minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into outputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated for every event arrival and expiry of every event (after one second of its arrival). minbytimebatch (Window) minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price.","title":"4.0.15"},{"location":"api/4.0.15/#api-docs-v4015","text":"","title":"API Docs - v4.0.15"},{"location":"api/4.0.15/#extrema","text":"","title":"Extrema"},{"location":"api/4.0.15/#bottomk-stream-processor","text":"bottomK counts the frequency of different values for a specified attribute, and outputs the specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of bottom frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomK(item, 3) insert all events into outputStream;) This query outputs the three items with the lowest frequency counts.","title":"bottomK (Stream Processor)"},{"location":"api/4.0.15/#bottomklengthbatch-stream-processor","text":"bottomKLengthBatc counts the frequency of different values of a specified attribute inside a batch window, and returns the specified number of least frequently occuring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are output, and the window is reset.","title":"bottomKLengthBatch (Stream Processor)"},{"location":"api/4.0.15/#bottomktimebatch-stream-processor","text":"bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occurring values that must be returned. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into outputStream;) This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset.","title":"bottomKTimeBatch (Stream Processor)"},{"location":"api/4.0.15/#kalmanminmax-stream-processor","text":"kalmanMinMax uses the Kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into outputStream;) This query returns the minimum values for a set of price values.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/4.0.15/#kernelminmax-stream-processor","text":"kernelMinMax uses Gaussian Kernel to smooth the time series values in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kernelMinMax(price, 3, 7, ?max?) select * insert into outputStream; This query returns the maximum values for a set of price values.","title":"kernelMinMax (Stream Processor)"},{"location":"api/4.0.15/#minmax-stream-processor","text":"minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from inputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into outputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from inputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into outputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from inputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into outputStream; This query returns both the minimum values and the maximum values found within a set of price values.","title":"minMax (Stream Processor)"},{"location":"api/4.0.15/#topk-stream-processor","text":"topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topK(item, 3) insert all events into outputStream;) This query emits the three items with the highest frequency counts.","title":"topK (Stream Processor)"},{"location":"api/4.0.15/#topklengthbatch-stream-processor","text":"topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKLengthBatch (Stream Processor)"},{"location":"api/4.0.15/#topktimebatch-stream-processor","text":"topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can have the values of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into outputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKTimeBatch (Stream Processor)"},{"location":"api/4.0.15/#maxbylength-window","text":"maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into outputStream ; This query observes a sliding window of 4 events, and returns the event with the maximum price.","title":"maxByLength (Window)"},{"location":"api/4.0.15/#maxbylengthbatch-window","text":"maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset.","title":"maxByLengthBatch (Window)"},{"location":"api/4.0.15/#maxbytime-window","text":"maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival).","title":"maxbytime (Window)"},{"location":"api/4.0.15/#maxbytimebatch-window","text":"maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output.","title":"maxbytimebatch (Window)"},{"location":"api/4.0.15/#minbylength-window","text":"minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into outputStream ; This query outputs the minimum price for a sliding length window of four events.","title":"minByLength (Window)"},{"location":"api/4.0.15/#minbylengthbatch-window","text":"minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset.","title":"minByLengthBatch (Window)"},{"location":"api/4.0.15/#minbytime-window","text":"minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into outputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated for every event arrival and expiry of every event (after one second of its arrival).","title":"minbytime (Window)"},{"location":"api/4.0.15/#minbytimebatch-window","text":"minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price.","title":"minbytimebatch (Window)"},{"location":"api/4.0.16/","text":"API Docs - v4.0.16 Extrema bottomK (Stream Processor) bottomK counts the frequency of different values for a specified attribute, and returns the number of least frequently occurring values. The events are returned only if there is a change in the 'bottomK' results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of lowest frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of attributes that are required to be returned as the ones with the lowest frequencies. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of attributes that are required to be returned as the ones with the lowest frequencies. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from inputStream#extrema:bottomK(item, 3) insert all events into OutputStream;) This query returns the three items with the lowest frequency counts. bottomKLengthBatch (Stream Processor) bottomKLengthBatch counts the frequency of different values of a specified attribute inside a batch window, and returns the number of least frequently occurring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' is the function parameter that denotes the number of bottom frequencies considered. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from inputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into OutputStream;) This function collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are returned to the 'OutputStream', and the batch window is reset. bottomKTimeBatch (Stream Processor) bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occurring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occurring values that must be returned. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of least frequently occurring values that must be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from inputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into OutputStream;) This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset. kalmanMinMax (Stream Processor) kalmanMinMax uses the Kalman filter to smooth the values of the time series in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum values for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream InputStream (item string, price long); from inputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into OutputStream;) This function returns the minimum value of a set of price values, to the output stream. kernelMinMax (Stream Processor) kernelMinMax uses Gaussian Kernel to smooth values of the series within the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum values for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This parameter can denote the minimum value, maximum value or both minimum and maximum values. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream InputStream (item string, price long); from inputStream#extrema:kernelMinMax(price, 3, 7, ?max?) select * insert into OutputStream; This query returns the maximum values for a set of price values while the bandwidth of the Gaussian Kernel calculation is three and the length of the window is seven. minMax (Stream Processor) minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from InputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into OutputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from InputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into OutputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from InputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into OutputStream; This query returns both the minimum values and the maximum values found within a set of price values. topK (Stream Processor) topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of frequent values that should be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, of 1 = N = k.value, where 'k.value' defines the number of frequent values that should be returned. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from inputStream#extrema:topK(item, 3) insert all events into OutputStream;) This query emits the three items with the highest frequency counts. topKLengthBatch (Stream Processor) topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold values within the range, of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into OutputStream;) This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset. topKTimeBatch (Stream Processor) topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window for which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' is defines the number of frequent values that is required to be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range 1 = N = k.value, where 'k.value' defines the number of frequent values that is required to be returned. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from inputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into OutputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset. maxByLength (Window) maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into OutputStream ; This query observes a sliding window of 4 events, and returns the event with the maximum price. maxByLengthBatch (Window) maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into OutputStream ; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset. maxbytime (Window) maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival). maxbytimebatch (Window) maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output. minByLength (Window) minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into OutputStream ; This query outputs the minimum price for a sliding length window of four events. minByLengthBatch (Window) minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into OutputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset. minbytime (Window) minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into OutputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated with the arrival and expiry of every event (after one second of its arrival). minbytimebatch (Window) minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price.","title":"4.0.16"},{"location":"api/4.0.16/#api-docs-v4016","text":"","title":"API Docs - v4.0.16"},{"location":"api/4.0.16/#extrema","text":"","title":"Extrema"},{"location":"api/4.0.16/#bottomk-stream-processor","text":"bottomK counts the frequency of different values for a specified attribute, and returns the number of least frequently occurring values. The events are returned only if there is a change in the 'bottomK' results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of lowest frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of attributes that are required to be returned as the ones with the lowest frequencies. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of attributes that are required to be returned as the ones with the lowest frequencies. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from inputStream#extrema:bottomK(item, 3) insert all events into OutputStream;) This query returns the three items with the lowest frequency counts.","title":"bottomK (Stream Processor)"},{"location":"api/4.0.16/#bottomklengthbatch-stream-processor","text":"bottomKLengthBatch counts the frequency of different values of a specified attribute inside a batch window, and returns the number of least frequently occurring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' is the function parameter that denotes the number of bottom frequencies considered. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from inputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into OutputStream;) This function collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are returned to the 'OutputStream', and the batch window is reset.","title":"bottomKLengthBatch (Stream Processor)"},{"location":"api/4.0.16/#bottomktimebatch-stream-processor","text":"bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occurring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occurring values that must be returned. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of least frequently occurring values that must be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from inputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into OutputStream;) This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset.","title":"bottomKTimeBatch (Stream Processor)"},{"location":"api/4.0.16/#kalmanminmax-stream-processor","text":"kalmanMinMax uses the Kalman filter to smooth the values of the time series in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum values for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream InputStream (item string, price long); from inputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into OutputStream;) This function returns the minimum value of a set of price values, to the output stream.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/4.0.16/#kernelminmax-stream-processor","text":"kernelMinMax uses Gaussian Kernel to smooth values of the series within the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum values for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This parameter can denote the minimum value, maximum value or both minimum and maximum values. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream InputStream (item string, price long); from inputStream#extrema:kernelMinMax(price, 3, 7, ?max?) select * insert into OutputStream; This query returns the maximum values for a set of price values while the bandwidth of the Gaussian Kernel calculation is three and the length of the window is seven.","title":"kernelMinMax (Stream Processor)"},{"location":"api/4.0.16/#minmax-stream-processor","text":"minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from InputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into OutputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from InputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into OutputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from InputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into OutputStream; This query returns both the minimum values and the maximum values found within a set of price values.","title":"minMax (Stream Processor)"},{"location":"api/4.0.16/#topk-stream-processor","text":"topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of frequent values that should be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, of 1 = N = k.value, where 'k.value' defines the number of frequent values that should be returned. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from inputStream#extrema:topK(item, 3) insert all events into OutputStream;) This query emits the three items with the highest frequency counts.","title":"topK (Stream Processor)"},{"location":"api/4.0.16/#topklengthbatch-stream-processor","text":"topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold values within the range, of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into OutputStream;) This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKLengthBatch (Stream Processor)"},{"location":"api/4.0.16/#topktimebatch-stream-processor","text":"topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window for which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' is defines the number of frequent values that is required to be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range 1 = N = k.value, where 'k.value' defines the number of frequent values that is required to be returned. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from inputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into OutputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKTimeBatch (Stream Processor)"},{"location":"api/4.0.16/#maxbylength-window","text":"maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into OutputStream ; This query observes a sliding window of 4 events, and returns the event with the maximum price.","title":"maxByLength (Window)"},{"location":"api/4.0.16/#maxbylengthbatch-window","text":"maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into OutputStream ; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset.","title":"maxByLengthBatch (Window)"},{"location":"api/4.0.16/#maxbytime-window","text":"maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival).","title":"maxbytime (Window)"},{"location":"api/4.0.16/#maxbytimebatch-window","text":"maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output.","title":"maxbytimebatch (Window)"},{"location":"api/4.0.16/#minbylength-window","text":"minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into OutputStream ; This query outputs the minimum price for a sliding length window of four events.","title":"minByLength (Window)"},{"location":"api/4.0.16/#minbylengthbatch-window","text":"minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into OutputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset.","title":"minByLengthBatch (Window)"},{"location":"api/4.0.16/#minbytime-window","text":"minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into OutputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated with the arrival and expiry of every event (after one second of its arrival).","title":"minbytime (Window)"},{"location":"api/4.0.16/#minbytimebatch-window","text":"minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price.","title":"minbytimebatch (Window)"},{"location":"api/4.0.17/","text":"API Docs - v4.0.17 Extrema bottomK (Stream Processor) bottomK counts the frequency of different values for a specified attribute, and returns the number of least frequently occurring values. The events are returned only if there is a change in the 'bottomK' results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of lowest frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of attributes that are required to be returned as the ones with the lowest frequencies. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of attributes that are required to be returned as the ones with the lowest frequencies. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:bottomK(item, 3) insert all events into OutputStream; This query returns the three items with the lowest frequency counts. bottomKLengthBatch (Stream Processor) bottomKLengthBatch counts the frequency of different values of a specified attribute inside a batch window, and returns the number of least frequently occurring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' is the function parameter that denotes the number of bottom frequencies considered. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into OutputStream; This function collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are returned to the 'OutputStream', and the batch window is reset. bottomKTimeBatch (Stream Processor) bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occurring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occurring values that must be returned. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of least frequently occurring values that must be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into OutputStream; This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset. kalmanMinMax (Stream Processor) kalmanMinMax uses the Kalman filter to smooth the values of the time series in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum values for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into OutputStream; This function returns the minimum value of a set of price values, to the output stream. kernelMinMax (Stream Processor) kernelMinMax uses Gaussian Kernel to smooth values of the series within the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum values for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This parameter can denote the minimum value, maximum value or both minimum and maximum values. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:kernelMinMax(price, 3, 7, ?max?) select * insert into OutputStream; This query returns the maximum values for a set of price values while the bandwidth of the Gaussian Kernel calculation is three and the length of the window is seven. minMax (Stream Processor) minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from InputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into OutputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from InputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into OutputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from InputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into OutputStream; This query returns both the minimum values and the maximum values found within a set of price values. topK (Stream Processor) topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of frequent values that should be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, of 1 = N = k.value, where 'k.value' defines the number of frequent values that should be returned. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:topK(item, 3) insert all events into OutputStream; This query emits the three items with the highest frequency counts. topKLengthBatch (Stream Processor) topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold values within the range, of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into OutputStream; This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset. topKTimeBatch (Stream Processor) topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window for which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of frequent values that is required to be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range 1 = N = k.value, where 'k.value' defines the number of frequent values that is required to be returned. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into OutputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset. maxByLength (Window) maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into OutputStream; This query observes a sliding window of 4 events, and returns the event with the maximum price. maxByLengthBatch (Window) maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into OutputStream; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset. maxbytime (Window) maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival). maxbytimebatch (Window) maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output. minByLength (Window) minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into OutputStream ; This query outputs the minimum price for a sliding length window of four events. minByLengthBatch (Window) minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into OutputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset. minbytime (Window) minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into OutputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated with the arrival and expiry of every event (after one second of its arrival). minbytimebatch (Window) minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price.","title":"4.0.17"},{"location":"api/4.0.17/#api-docs-v4017","text":"","title":"API Docs - v4.0.17"},{"location":"api/4.0.17/#extrema","text":"","title":"Extrema"},{"location":"api/4.0.17/#bottomk-stream-processor","text":"bottomK counts the frequency of different values for a specified attribute, and returns the number of least frequently occurring values. The events are returned only if there is a change in the 'bottomK' results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of lowest frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of attributes that are required to be returned as the ones with the lowest frequencies. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of attributes that are required to be returned as the ones with the lowest frequencies. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:bottomK(item, 3) insert all events into OutputStream; This query returns the three items with the lowest frequency counts.","title":"bottomK (Stream Processor)"},{"location":"api/4.0.17/#bottomklengthbatch-stream-processor","text":"bottomKLengthBatch counts the frequency of different values of a specified attribute inside a batch window, and returns the number of least frequently occurring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' is the function parameter that denotes the number of bottom frequencies considered. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into OutputStream; This function collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are returned to the 'OutputStream', and the batch window is reset.","title":"bottomKLengthBatch (Stream Processor)"},{"location":"api/4.0.17/#bottomktimebatch-stream-processor","text":"bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occurring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occurring values that must be returned. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of least frequently occurring values that must be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into OutputStream; This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset.","title":"bottomKTimeBatch (Stream Processor)"},{"location":"api/4.0.17/#kalmanminmax-stream-processor","text":"kalmanMinMax uses the Kalman filter to smooth the values of the time series in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum values for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into OutputStream; This function returns the minimum value of a set of price values, to the output stream.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/4.0.17/#kernelminmax-stream-processor","text":"kernelMinMax uses Gaussian Kernel to smooth values of the series within the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum values for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This parameter can denote the minimum value, maximum value or both minimum and maximum values. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:kernelMinMax(price, 3, 7, ?max?) select * insert into OutputStream; This query returns the maximum values for a set of price values while the bandwidth of the Gaussian Kernel calculation is three and the length of the window is seven.","title":"kernelMinMax (Stream Processor)"},{"location":"api/4.0.17/#minmax-stream-processor","text":"minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from InputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into OutputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from InputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into OutputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from InputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into OutputStream; This query returns both the minimum values and the maximum values found within a set of price values.","title":"minMax (Stream Processor)"},{"location":"api/4.0.17/#topk-stream-processor","text":"topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of frequent values that should be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, of 1 = N = k.value, where 'k.value' defines the number of frequent values that should be returned. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:topK(item, 3) insert all events into OutputStream; This query emits the three items with the highest frequency counts.","title":"topK (Stream Processor)"},{"location":"api/4.0.17/#topklengthbatch-stream-processor","text":"topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold values within the range, of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into OutputStream; This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKLengthBatch (Stream Processor)"},{"location":"api/4.0.17/#topktimebatch-stream-processor","text":"topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window for which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of frequent values that is required to be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range 1 = N = k.value, where 'k.value' defines the number of frequent values that is required to be returned. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into OutputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKTimeBatch (Stream Processor)"},{"location":"api/4.0.17/#maxbylength-window","text":"maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into OutputStream; This query observes a sliding window of 4 events, and returns the event with the maximum price.","title":"maxByLength (Window)"},{"location":"api/4.0.17/#maxbylengthbatch-window","text":"maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into OutputStream; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset.","title":"maxByLengthBatch (Window)"},{"location":"api/4.0.17/#maxbytime-window","text":"maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival).","title":"maxbytime (Window)"},{"location":"api/4.0.17/#maxbytimebatch-window","text":"maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output.","title":"maxbytimebatch (Window)"},{"location":"api/4.0.17/#minbylength-window","text":"minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into OutputStream ; This query outputs the minimum price for a sliding length window of four events.","title":"minByLength (Window)"},{"location":"api/4.0.17/#minbylengthbatch-window","text":"minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into OutputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset.","title":"minByLengthBatch (Window)"},{"location":"api/4.0.17/#minbytime-window","text":"minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into OutputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated with the arrival and expiry of every event (after one second of its arrival).","title":"minbytime (Window)"},{"location":"api/4.0.17/#minbytimebatch-window","text":"minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price.","title":"minbytimebatch (Window)"},{"location":"api/4.0.4/","text":"API Docs - v4.0.4 Extrema minbytimebatch (Window) minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price. minByLength (Window) minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into outputStream ; This query outputs the minimum price for a sliding length window of four events. minByLengthBatch (Window) minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset. maxbytimebatch (Window) maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output. maxByLength (Window) maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into outputStream ; This query observes a sliding window of 4 events, and returns the event with the maximum price. maxByLengthBatch (Window) maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset. minbytime (Window) minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into outputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated for every event arrival and expiry of every event (after one second of its arrival). maxbytime (Window) maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival). topKLengthBatch (Stream Processor) topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset. minMax (Stream Processor) minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from inputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into outputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from inputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into outputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from inputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into outputStream; This query returns both the minimum values and the maximum values found within a set of price values. kernelMinMax (Stream Processor) kernelMinMax uses Gaussian Kernel to smooth the time series values in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kernelMinMax(price, 3, 7, ?max?) select * insert into outputStream; This query returns the maximum values for a set of price values. kalmanMinMax (Stream Processor) kalmanMinMax uses the Kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into outputStream;) This query returns the minimum values for a set of price values. bottomK (Stream Processor) bottomK counts the frequency of different values for a specified attribute, and outputs the specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of bottom frequencies required. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomK(item, 3) insert all events into outputStream;) This query outputs the three items with the lowest frequency counts. bottomKLengthBatch (Stream Processor) bottomKLengthBatc counts the frequency of different values of a specified attribute inside a batch window, and returns the specified number of least frequently occuring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are output, and the window is reset. bottomKTimeBatch (Stream Processor) bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occuring values that must be returned. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into outputStream;) This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset. topK (Stream Processor) topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topK(item, 3) insert all events into outputStream;) This query emits the three items with the highest frequency counts. topKTimeBatch (Stream Processor) topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into outputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"4.0.4"},{"location":"api/4.0.4/#api-docs-v404","text":"","title":"API Docs - v4.0.4"},{"location":"api/4.0.4/#extrema","text":"","title":"Extrema"},{"location":"api/4.0.4/#minbytimebatch-window","text":"minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price.","title":"minbytimebatch (Window)"},{"location":"api/4.0.4/#minbylength-window","text":"minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into outputStream ; This query outputs the minimum price for a sliding length window of four events.","title":"minByLength (Window)"},{"location":"api/4.0.4/#minbylengthbatch-window","text":"minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset.","title":"minByLengthBatch (Window)"},{"location":"api/4.0.4/#maxbytimebatch-window","text":"maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output.","title":"maxbytimebatch (Window)"},{"location":"api/4.0.4/#maxbylength-window","text":"maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into outputStream ; This query observes a sliding window of 4 events, and returns the event with the maximum price.","title":"maxByLength (Window)"},{"location":"api/4.0.4/#maxbylengthbatch-window","text":"maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset.","title":"maxByLengthBatch (Window)"},{"location":"api/4.0.4/#minbytime-window","text":"minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into outputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated for every event arrival and expiry of every event (after one second of its arrival).","title":"minbytime (Window)"},{"location":"api/4.0.4/#maxbytime-window","text":"maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival).","title":"maxbytime (Window)"},{"location":"api/4.0.4/#topklengthbatch-stream-processor","text":"topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKLengthBatch (Stream Processor)"},{"location":"api/4.0.4/#minmax-stream-processor","text":"minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from inputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into outputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from inputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into outputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from inputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into outputStream; This query returns both the minimum values and the maximum values found within a set of price values.","title":"minMax (Stream Processor)"},{"location":"api/4.0.4/#kernelminmax-stream-processor","text":"kernelMinMax uses Gaussian Kernel to smooth the time series values in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kernelMinMax(price, 3, 7, ?max?) select * insert into outputStream; This query returns the maximum values for a set of price values.","title":"kernelMinMax (Stream Processor)"},{"location":"api/4.0.4/#kalmanminmax-stream-processor","text":"kalmanMinMax uses the Kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into outputStream;) This query returns the minimum values for a set of price values.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/4.0.4/#bottomk-stream-processor","text":"bottomK counts the frequency of different values for a specified attribute, and outputs the specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of bottom frequencies required. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomK(item, 3) insert all events into outputStream;) This query outputs the three items with the lowest frequency counts.","title":"bottomK (Stream Processor)"},{"location":"api/4.0.4/#bottomklengthbatch-stream-processor","text":"bottomKLengthBatc counts the frequency of different values of a specified attribute inside a batch window, and returns the specified number of least frequently occuring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are output, and the window is reset.","title":"bottomKLengthBatch (Stream Processor)"},{"location":"api/4.0.4/#bottomktimebatch-stream-processor","text":"bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occuring values that must be returned. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into outputStream;) This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset.","title":"bottomKTimeBatch (Stream Processor)"},{"location":"api/4.0.4/#topk-stream-processor","text":"topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topK(item, 3) insert all events into outputStream;) This query emits the three items with the highest frequency counts.","title":"topK (Stream Processor)"},{"location":"api/4.0.4/#topktimebatch-stream-processor","text":"topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into outputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKTimeBatch (Stream Processor)"},{"location":"api/4.0.5/","text":"API Docs - v4.0.5 Extrema bottomK (Stream Processor) bottomK counts the frequency of different values for a specified attribute, and outputs the specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of bottom frequencies required. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomK(item, 3) insert all events into outputStream;) This query outputs the three items with the lowest frequency counts. bottomKLengthBatch (Stream Processor) bottomKLengthBatc counts the frequency of different values of a specified attribute inside a batch window, and returns the specified number of least frequently occuring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are output, and the window is reset. bottomKTimeBatch (Stream Processor) bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occuring values that must be returned. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into outputStream;) This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset. kalmanMinMax (Stream Processor) kalmanMinMax uses the Kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into outputStream;) This query returns the minimum values for a set of price values. kernelMinMax (Stream Processor) kernelMinMax uses Gaussian Kernel to smooth the time series values in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kernelMinMax(price, 3, 7, ?max?) select * insert into outputStream; This query returns the maximum values for a set of price values. minMax (Stream Processor) minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from inputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into outputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from inputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into outputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from inputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into outputStream; This query returns both the minimum values and the maximum values found within a set of price values. topK (Stream Processor) topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topK(item, 3) insert all events into outputStream;) This query emits the three items with the highest frequency counts. topKLengthBatch (Stream Processor) topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset. topKTimeBatch (Stream Processor) topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into outputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset. maxByLength (Window) maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into outputStream ; This query observes a sliding window of 4 events, and returns the event with the maximum price. maxByLengthBatch (Window) maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset. maxbytime (Window) maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival). maxbytimebatch (Window) maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output. minByLength (Window) minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into outputStream ; This query outputs the minimum price for a sliding length window of four events. minByLengthBatch (Window) minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset. minbytime (Window) minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into outputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated for every event arrival and expiry of every event (after one second of its arrival). minbytimebatch (Window) minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price.","title":"4.0.5"},{"location":"api/4.0.5/#api-docs-v405","text":"","title":"API Docs - v4.0.5"},{"location":"api/4.0.5/#extrema","text":"","title":"Extrema"},{"location":"api/4.0.5/#bottomk-stream-processor","text":"bottomK counts the frequency of different values for a specified attribute, and outputs the specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of bottom frequencies required. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomK(item, 3) insert all events into outputStream;) This query outputs the three items with the lowest frequency counts.","title":"bottomK (Stream Processor)"},{"location":"api/4.0.5/#bottomklengthbatch-stream-processor","text":"bottomKLengthBatc counts the frequency of different values of a specified attribute inside a batch window, and returns the specified number of least frequently occuring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are output, and the window is reset.","title":"bottomKLengthBatch (Stream Processor)"},{"location":"api/4.0.5/#bottomktimebatch-stream-processor","text":"bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occuring values that must be returned. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into outputStream;) This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset.","title":"bottomKTimeBatch (Stream Processor)"},{"location":"api/4.0.5/#kalmanminmax-stream-processor","text":"kalmanMinMax uses the Kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into outputStream;) This query returns the minimum values for a set of price values.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/4.0.5/#kernelminmax-stream-processor","text":"kernelMinMax uses Gaussian Kernel to smooth the time series values in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kernelMinMax(price, 3, 7, ?max?) select * insert into outputStream; This query returns the maximum values for a set of price values.","title":"kernelMinMax (Stream Processor)"},{"location":"api/4.0.5/#minmax-stream-processor","text":"minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from inputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into outputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from inputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into outputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from inputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into outputStream; This query returns both the minimum values and the maximum values found within a set of price values.","title":"minMax (Stream Processor)"},{"location":"api/4.0.5/#topk-stream-processor","text":"topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topK(item, 3) insert all events into outputStream;) This query emits the three items with the highest frequency counts.","title":"topK (Stream Processor)"},{"location":"api/4.0.5/#topklengthbatch-stream-processor","text":"topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKLengthBatch (Stream Processor)"},{"location":"api/4.0.5/#topktimebatch-stream-processor","text":"topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into outputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKTimeBatch (Stream Processor)"},{"location":"api/4.0.5/#maxbylength-window","text":"maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into outputStream ; This query observes a sliding window of 4 events, and returns the event with the maximum price.","title":"maxByLength (Window)"},{"location":"api/4.0.5/#maxbylengthbatch-window","text":"maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset.","title":"maxByLengthBatch (Window)"},{"location":"api/4.0.5/#maxbytime-window","text":"maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival).","title":"maxbytime (Window)"},{"location":"api/4.0.5/#maxbytimebatch-window","text":"maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output.","title":"maxbytimebatch (Window)"},{"location":"api/4.0.5/#minbylength-window","text":"minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into outputStream ; This query outputs the minimum price for a sliding length window of four events.","title":"minByLength (Window)"},{"location":"api/4.0.5/#minbylengthbatch-window","text":"minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset.","title":"minByLengthBatch (Window)"},{"location":"api/4.0.5/#minbytime-window","text":"minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into outputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated for every event arrival and expiry of every event (after one second of its arrival).","title":"minbytime (Window)"},{"location":"api/4.0.5/#minbytimebatch-window","text":"minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price.","title":"minbytimebatch (Window)"},{"location":"api/4.0.6/","text":"API Docs - v4.0.6 Extrema bottomK (Stream Processor) bottomK counts the frequency of different values for a specified attribute, and outputs the specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of bottom frequencies required. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomK(item, 3) insert all events into outputStream;) This query outputs the three items with the lowest frequency counts. bottomKLengthBatch (Stream Processor) bottomKLengthBatc counts the frequency of different values of a specified attribute inside a batch window, and returns the specified number of least frequently occuring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are output, and the window is reset. bottomKTimeBatch (Stream Processor) bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occuring values that must be returned. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into outputStream;) This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset. kalmanMinMax (Stream Processor) kalmanMinMax uses the Kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into outputStream;) This query returns the minimum values for a set of price values. kernelMinMax (Stream Processor) kernelMinMax uses Gaussian Kernel to smooth the time series values in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kernelMinMax(price, 3, 7, ?max?) select * insert into outputStream; This query returns the maximum values for a set of price values. minMax (Stream Processor) minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from inputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into outputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from inputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into outputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from inputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into outputStream; This query returns both the minimum values and the maximum values found within a set of price values. topK (Stream Processor) topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topK(item, 3) insert all events into outputStream;) This query emits the three items with the highest frequency counts. topKLengthBatch (Stream Processor) topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset. topKTimeBatch (Stream Processor) topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into outputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset. maxByLength (Window) maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into outputStream ; This query observes a sliding window of 4 events, and returns the event with the maximum price. maxByLengthBatch (Window) maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset. maxbytime (Window) maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival). maxbytimebatch (Window) maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output. minByLength (Window) minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into outputStream ; This query outputs the minimum price for a sliding length window of four events. minByLengthBatch (Window) minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset. minbytime (Window) minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into outputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated for every event arrival and expiry of every event (after one second of its arrival). minbytimebatch (Window) minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price.","title":"4.0.6"},{"location":"api/4.0.6/#api-docs-v406","text":"","title":"API Docs - v4.0.6"},{"location":"api/4.0.6/#extrema","text":"","title":"Extrema"},{"location":"api/4.0.6/#bottomk-stream-processor","text":"bottomK counts the frequency of different values for a specified attribute, and outputs the specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of bottom frequencies required. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomK(item, 3) insert all events into outputStream;) This query outputs the three items with the lowest frequency counts.","title":"bottomK (Stream Processor)"},{"location":"api/4.0.6/#bottomklengthbatch-stream-processor","text":"bottomKLengthBatc counts the frequency of different values of a specified attribute inside a batch window, and returns the specified number of least frequently occuring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are output, and the window is reset.","title":"bottomKLengthBatch (Stream Processor)"},{"location":"api/4.0.6/#bottomktimebatch-stream-processor","text":"bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occuring values that must be returned. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into outputStream;) This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset.","title":"bottomKTimeBatch (Stream Processor)"},{"location":"api/4.0.6/#kalmanminmax-stream-processor","text":"kalmanMinMax uses the Kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into outputStream;) This query returns the minimum values for a set of price values.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/4.0.6/#kernelminmax-stream-processor","text":"kernelMinMax uses Gaussian Kernel to smooth the time series values in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kernelMinMax(price, 3, 7, ?max?) select * insert into outputStream; This query returns the maximum values for a set of price values.","title":"kernelMinMax (Stream Processor)"},{"location":"api/4.0.6/#minmax-stream-processor","text":"minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from inputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into outputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from inputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into outputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from inputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into outputStream; This query returns both the minimum values and the maximum values found within a set of price values.","title":"minMax (Stream Processor)"},{"location":"api/4.0.6/#topk-stream-processor","text":"topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topK(item, 3) insert all events into outputStream;) This query emits the three items with the highest frequency counts.","title":"topK (Stream Processor)"},{"location":"api/4.0.6/#topklengthbatch-stream-processor","text":"topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKLengthBatch (Stream Processor)"},{"location":"api/4.0.6/#topktimebatch-stream-processor","text":"topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into outputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKTimeBatch (Stream Processor)"},{"location":"api/4.0.6/#maxbylength-window","text":"maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into outputStream ; This query observes a sliding window of 4 events, and returns the event with the maximum price.","title":"maxByLength (Window)"},{"location":"api/4.0.6/#maxbylengthbatch-window","text":"maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset.","title":"maxByLengthBatch (Window)"},{"location":"api/4.0.6/#maxbytime-window","text":"maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival).","title":"maxbytime (Window)"},{"location":"api/4.0.6/#maxbytimebatch-window","text":"maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output.","title":"maxbytimebatch (Window)"},{"location":"api/4.0.6/#minbylength-window","text":"minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into outputStream ; This query outputs the minimum price for a sliding length window of four events.","title":"minByLength (Window)"},{"location":"api/4.0.6/#minbylengthbatch-window","text":"minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset.","title":"minByLengthBatch (Window)"},{"location":"api/4.0.6/#minbytime-window","text":"minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into outputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated for every event arrival and expiry of every event (after one second of its arrival).","title":"minbytime (Window)"},{"location":"api/4.0.6/#minbytimebatch-window","text":"minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price.","title":"minbytimebatch (Window)"},{"location":"api/4.0.7/","text":"API Docs - v4.0.7 Extrema bottomK (Stream Processor) bottomK counts the frequency of different values for a specified attribute, and outputs the specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of bottom frequencies required. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomK(item, 3) insert all events into outputStream;) This query outputs the three items with the lowest frequency counts. bottomKLengthBatch (Stream Processor) bottomKLengthBatc counts the frequency of different values of a specified attribute inside a batch window, and returns the specified number of least frequently occuring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are output, and the window is reset. bottomKTimeBatch (Stream Processor) bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occuring values that must be returned. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into outputStream;) This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset. kalmanMinMax (Stream Processor) kalmanMinMax uses the Kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into outputStream;) This query returns the minimum values for a set of price values. kernelMinMax (Stream Processor) kernelMinMax uses Gaussian Kernel to smooth the time series values in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kernelMinMax(price, 3, 7, ?max?) select * insert into outputStream; This query returns the maximum values for a set of price values. minMax (Stream Processor) minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from inputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into outputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from inputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into outputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from inputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into outputStream; This query returns both the minimum values and the maximum values found within a set of price values. topK (Stream Processor) topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topK(item, 3) insert all events into outputStream;) This query emits the three items with the highest frequency counts. topKLengthBatch (Stream Processor) topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset. topKTimeBatch (Stream Processor) topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into outputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset. maxByLength (Window) maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into outputStream ; This query observes a sliding window of 4 events, and returns the event with the maximum price. maxByLengthBatch (Window) maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset. maxbytime (Window) maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival). maxbytimebatch (Window) maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output. minByLength (Window) minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into outputStream ; This query outputs the minimum price for a sliding length window of four events. minByLengthBatch (Window) minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset. minbytime (Window) minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into outputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated for every event arrival and expiry of every event (after one second of its arrival). minbytimebatch (Window) minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price.","title":"4.0.7"},{"location":"api/4.0.7/#api-docs-v407","text":"","title":"API Docs - v4.0.7"},{"location":"api/4.0.7/#extrema","text":"","title":"Extrema"},{"location":"api/4.0.7/#bottomk-stream-processor","text":"bottomK counts the frequency of different values for a specified attribute, and outputs the specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of bottom frequencies required. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomK(item, 3) insert all events into outputStream;) This query outputs the three items with the lowest frequency counts.","title":"bottomK (Stream Processor)"},{"location":"api/4.0.7/#bottomklengthbatch-stream-processor","text":"bottomKLengthBatc counts the frequency of different values of a specified attribute inside a batch window, and returns the specified number of least frequently occuring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are output, and the window is reset.","title":"bottomKLengthBatch (Stream Processor)"},{"location":"api/4.0.7/#bottomktimebatch-stream-processor","text":"bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occuring values that must be returned. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into outputStream;) This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset.","title":"bottomKTimeBatch (Stream Processor)"},{"location":"api/4.0.7/#kalmanminmax-stream-processor","text":"kalmanMinMax uses the Kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into outputStream;) This query returns the minimum values for a set of price values.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/4.0.7/#kernelminmax-stream-processor","text":"kernelMinMax uses Gaussian Kernel to smooth the time series values in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kernelMinMax(price, 3, 7, ?max?) select * insert into outputStream; This query returns the maximum values for a set of price values.","title":"kernelMinMax (Stream Processor)"},{"location":"api/4.0.7/#minmax-stream-processor","text":"minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from inputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into outputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from inputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into outputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from inputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into outputStream; This query returns both the minimum values and the maximum values found within a set of price values.","title":"minMax (Stream Processor)"},{"location":"api/4.0.7/#topk-stream-processor","text":"topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topK(item, 3) insert all events into outputStream;) This query emits the three items with the highest frequency counts.","title":"topK (Stream Processor)"},{"location":"api/4.0.7/#topklengthbatch-stream-processor","text":"topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKLengthBatch (Stream Processor)"},{"location":"api/4.0.7/#topktimebatch-stream-processor","text":"topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into outputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKTimeBatch (Stream Processor)"},{"location":"api/4.0.7/#maxbylength-window","text":"maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into outputStream ; This query observes a sliding window of 4 events, and returns the event with the maximum price.","title":"maxByLength (Window)"},{"location":"api/4.0.7/#maxbylengthbatch-window","text":"maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset.","title":"maxByLengthBatch (Window)"},{"location":"api/4.0.7/#maxbytime-window","text":"maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival).","title":"maxbytime (Window)"},{"location":"api/4.0.7/#maxbytimebatch-window","text":"maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output.","title":"maxbytimebatch (Window)"},{"location":"api/4.0.7/#minbylength-window","text":"minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into outputStream ; This query outputs the minimum price for a sliding length window of four events.","title":"minByLength (Window)"},{"location":"api/4.0.7/#minbylengthbatch-window","text":"minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset.","title":"minByLengthBatch (Window)"},{"location":"api/4.0.7/#minbytime-window","text":"minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into outputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated for every event arrival and expiry of every event (after one second of its arrival).","title":"minbytime (Window)"},{"location":"api/4.0.7/#minbytimebatch-window","text":"minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price.","title":"minbytimebatch (Window)"},{"location":"api/4.0.8/","text":"API Docs - v4.0.8 Extrema bottomK (Stream Processor) bottomK counts the frequency of different values for a specified attribute, and outputs the specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of bottom frequencies required. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomK(item, 3) insert all events into outputStream;) This query outputs the three items with the lowest frequency counts. bottomKLengthBatch (Stream Processor) bottomKLengthBatc counts the frequency of different values of a specified attribute inside a batch window, and returns the specified number of least frequently occuring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are output, and the window is reset. bottomKTimeBatch (Stream Processor) bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occuring values that must be returned. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into outputStream;) This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset. kalmanMinMax (Stream Processor) kalmanMinMax uses the Kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into outputStream;) This query returns the minimum values for a set of price values. kernelMinMax (Stream Processor) kernelMinMax uses Gaussian Kernel to smooth the time series values in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kernelMinMax(price, 3, 7, ?max?) select * insert into outputStream; This query returns the maximum values for a set of price values. minMax (Stream Processor) minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from inputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into outputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from inputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into outputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from inputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into outputStream; This query returns both the minimum values and the maximum values found within a set of price values. topK (Stream Processor) topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topK(item, 3) insert all events into outputStream;) This query emits the three items with the highest frequency counts. topKLengthBatch (Stream Processor) topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset. topKTimeBatch (Stream Processor) topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into outputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset. maxByLength (Window) maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into outputStream ; This query observes a sliding window of 4 events, and returns the event with the maximum price. maxByLengthBatch (Window) maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset. maxbytime (Window) maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival). maxbytimebatch (Window) maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output. minByLength (Window) minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into outputStream ; This query outputs the minimum price for a sliding length window of four events. minByLengthBatch (Window) minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset. minbytime (Window) minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into outputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated for every event arrival and expiry of every event (after one second of its arrival). minbytimebatch (Window) minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price.","title":"4.0.8"},{"location":"api/4.0.8/#api-docs-v408","text":"","title":"API Docs - v4.0.8"},{"location":"api/4.0.8/#extrema","text":"","title":"Extrema"},{"location":"api/4.0.8/#bottomk-stream-processor","text":"bottomK counts the frequency of different values for a specified attribute, and outputs the specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of bottom frequencies required. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomK(item, 3) insert all events into outputStream;) This query outputs the three items with the lowest frequency counts.","title":"bottomK (Stream Processor)"},{"location":"api/4.0.8/#bottomklengthbatch-stream-processor","text":"bottomKLengthBatc counts the frequency of different values of a specified attribute inside a batch window, and returns the specified number of least frequently occuring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are output, and the window is reset.","title":"bottomKLengthBatch (Stream Processor)"},{"location":"api/4.0.8/#bottomktimebatch-stream-processor","text":"bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occuring values that must be returned. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into outputStream;) This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset.","title":"bottomKTimeBatch (Stream Processor)"},{"location":"api/4.0.8/#kalmanminmax-stream-processor","text":"kalmanMinMax uses the Kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into outputStream;) This query returns the minimum values for a set of price values.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/4.0.8/#kernelminmax-stream-processor","text":"kernelMinMax uses Gaussian Kernel to smooth the time series values in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kernelMinMax(price, 3, 7, ?max?) select * insert into outputStream; This query returns the maximum values for a set of price values.","title":"kernelMinMax (Stream Processor)"},{"location":"api/4.0.8/#minmax-stream-processor","text":"minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from inputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into outputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from inputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into outputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from inputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into outputStream; This query returns both the minimum values and the maximum values found within a set of price values.","title":"minMax (Stream Processor)"},{"location":"api/4.0.8/#topk-stream-processor","text":"topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topK(item, 3) insert all events into outputStream;) This query emits the three items with the highest frequency counts.","title":"topK (Stream Processor)"},{"location":"api/4.0.8/#topklengthbatch-stream-processor","text":"topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKLengthBatch (Stream Processor)"},{"location":"api/4.0.8/#topktimebatch-stream-processor","text":"topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into outputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKTimeBatch (Stream Processor)"},{"location":"api/4.0.8/#maxbylength-window","text":"maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into outputStream ; This query observes a sliding window of 4 events, and returns the event with the maximum price.","title":"maxByLength (Window)"},{"location":"api/4.0.8/#maxbylengthbatch-window","text":"maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset.","title":"maxByLengthBatch (Window)"},{"location":"api/4.0.8/#maxbytime-window","text":"maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival).","title":"maxbytime (Window)"},{"location":"api/4.0.8/#maxbytimebatch-window","text":"maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output.","title":"maxbytimebatch (Window)"},{"location":"api/4.0.8/#minbylength-window","text":"minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into outputStream ; This query outputs the minimum price for a sliding length window of four events.","title":"minByLength (Window)"},{"location":"api/4.0.8/#minbylengthbatch-window","text":"minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset.","title":"minByLengthBatch (Window)"},{"location":"api/4.0.8/#minbytime-window","text":"minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into outputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated for every event arrival and expiry of every event (after one second of its arrival).","title":"minbytime (Window)"},{"location":"api/4.0.8/#minbytimebatch-window","text":"minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price.","title":"minbytimebatch (Window)"},{"location":"api/4.0.9/","text":"API Docs - v4.0.9 Extrema bottomK (Stream Processor) bottomK counts the frequency of different values for a specified attribute, and outputs the specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of bottom frequencies required. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomK(item, 3) insert all events into outputStream;) This query outputs the three items with the lowest frequency counts. bottomKLengthBatch (Stream Processor) bottomKLengthBatc counts the frequency of different values of a specified attribute inside a batch window, and returns the specified number of least frequently occuring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are output, and the window is reset. bottomKTimeBatch (Stream Processor) bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occuring values that must be returned. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into outputStream;) This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset. kalmanMinMax (Stream Processor) kalmanMinMax uses the Kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into outputStream;) This query returns the minimum values for a set of price values. kernelMinMax (Stream Processor) kernelMinMax uses Gaussian Kernel to smooth the time series values in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kernelMinMax(price, 3, 7, ?max?) select * insert into outputStream; This query returns the maximum values for a set of price values. minMax (Stream Processor) minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from inputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into outputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from inputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into outputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from inputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into outputStream; This query returns both the minimum values and the maximum values found within a set of price values. topK (Stream Processor) topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topK(item, 3) insert all events into outputStream;) This query emits the three items with the highest frequency counts. topKLengthBatch (Stream Processor) topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset. topKTimeBatch (Stream Processor) topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into outputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset. maxByLength (Window) maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into outputStream ; This query observes a sliding window of 4 events, and returns the event with the maximum price. maxByLengthBatch (Window) maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset. maxbytime (Window) maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival). maxbytimebatch (Window) maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output. minByLength (Window) minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into outputStream ; This query outputs the minimum price for a sliding length window of four events. minByLengthBatch (Window) minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset. minbytime (Window) minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into outputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated for every event arrival and expiry of every event (after one second of its arrival). minbytimebatch (Window) minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price.","title":"4.0.9"},{"location":"api/4.0.9/#api-docs-v409","text":"","title":"API Docs - v4.0.9"},{"location":"api/4.0.9/#extrema","text":"","title":"Extrema"},{"location":"api/4.0.9/#bottomk-stream-processor","text":"bottomK counts the frequency of different values for a specified attribute, and outputs the specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of bottom frequencies required. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomK(item, 3) insert all events into outputStream;) This query outputs the three items with the lowest frequency counts.","title":"bottomK (Stream Processor)"},{"location":"api/4.0.9/#bottomklengthbatch-stream-processor","text":"bottomKLengthBatc counts the frequency of different values of a specified attribute inside a batch window, and returns the specified number of least frequently occuring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are output, and the window is reset.","title":"bottomKLengthBatch (Stream Processor)"},{"location":"api/4.0.9/#bottomktimebatch-stream-processor","text":"bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occuring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occuring values that must be returned. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into outputStream;) This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset.","title":"bottomKTimeBatch (Stream Processor)"},{"location":"api/4.0.9/#kalmanminmax-stream-processor","text":"kalmanMinMax uses the Kalman filter to smooth the time series values in the given window size, and then determine the maxima and minima of that set of values. Returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into outputStream;) This query returns the minimum values for a set of price values.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/4.0.9/#kernelminmax-stream-processor","text":"kernelMinMax uses Gaussian Kernel to smooth the time series values in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:kernelMinMax(price, 3, 7, ?max?) select * insert into outputStream; This query returns the maximum values for a set of price values.","title":"kernelMinMax (Stream Processor)"},{"location":"api/4.0.9/#minmax-stream-processor","text":"minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from inputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into outputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from inputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into outputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from inputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into outputStream; This query returns both the minimum values and the maximum values found within a set of price values.","title":"minMax (Stream Processor)"},{"location":"api/4.0.9/#topk-stream-processor","text":"topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topK(item, 3) insert all events into outputStream;) This query emits the three items with the highest frequency counts.","title":"topK (Stream Processor)"},{"location":"api/4.0.9/#topklengthbatch-stream-processor","text":"topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into outputStream;) This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKLengthBatch (Stream Processor)"},{"location":"api/4.0.9/#topktimebatch-stream-processor","text":"topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Examples EXAMPLE 1 define stream inputStream (item string, price long); from inputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into outputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKTimeBatch (Stream Processor)"},{"location":"api/4.0.9/#maxbylength-window","text":"maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into outputStream ; This query observes a sliding window of 4 events, and returns the event with the maximum price.","title":"maxByLength (Window)"},{"location":"api/4.0.9/#maxbylengthbatch-window","text":"maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset.","title":"maxByLengthBatch (Window)"},{"location":"api/4.0.9/#maxbytime-window","text":"maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival).","title":"maxbytime (Window)"},{"location":"api/4.0.9/#maxbytimebatch-window","text":"maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output.","title":"maxbytimebatch (Window)"},{"location":"api/4.0.9/#minbylength-window","text":"minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into outputStream ; This query outputs the minimum price for a sliding length window of four events.","title":"minByLength (Window)"},{"location":"api/4.0.9/#minbylengthbatch-window","text":"minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into outputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset.","title":"minByLengthBatch (Window)"},{"location":"api/4.0.9/#minbytime-window","text":"minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into outputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated for every event arrival and expiry of every event (after one second of its arrival).","title":"minbytime (Window)"},{"location":"api/4.0.9/#minbytimebatch-window","text":"minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream cseEventStream (symbol string, price float, volume int); from cseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into outputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price.","title":"minbytimebatch (Window)"},{"location":"api/4.1.0/","text":"API Docs - v4.1.0 Extrema bottomK (Stream Processor) bottomK counts the frequency of different values for a specified attribute, and returns the number of least frequently occurring values. The events are returned only if there is a change in the 'bottomK' results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of lowest frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of attributes that are required to be returned as the ones with the lowest frequencies. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of attributes that are required to be returned as the ones with the lowest frequencies. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:bottomK(item, 3) insert all events into OutputStream; This query returns the three items with the lowest frequency counts. bottomKLengthBatch (Stream Processor) bottomKLengthBatch counts the frequency of different values of a specified attribute inside a batch window, and returns the number of least frequently occurring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' is the function parameter that denotes the number of bottom frequencies considered. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into OutputStream; This function collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are returned to the 'OutputStream', and the batch window is reset. bottomKTimeBatch (Stream Processor) bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occurring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occurring values that must be returned. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of least frequently occurring values that must be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into OutputStream; This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset. kalmanMinMax (Stream Processor) kalmanMinMax uses the Kalman filter to smooth the values of the time series in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum values for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into OutputStream; This function returns the minimum value of a set of price values, to the output stream. kernelMinMax (Stream Processor) kernelMinMax uses Gaussian Kernel to smooth values of the series within the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum values for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This parameter can denote the minimum value, maximum value or both minimum and maximum values. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:kernelMinMax(price, 3, 7, ?max?) select * insert into OutputStream; This query returns the maximum values for a set of price values while the bandwidth of the Gaussian Kernel calculation is three and the length of the window is seven. minMax (Stream Processor) minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from InputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into OutputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from InputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into OutputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from InputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into OutputStream; This query returns both the minimum values and the maximum values found within a set of price values. topK (Stream Processor) topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of frequent values that should be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, of 1 = N = k.value, where 'k.value' defines the number of frequent values that should be returned. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:topK(item, 3) insert all events into OutputStream; This query emits the three items with the highest frequency counts. topKLengthBatch (Stream Processor) topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold values within the range, of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into OutputStream; This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset. topKTimeBatch (Stream Processor) topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window for which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of frequent values that is required to be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range 1 = N = k.value, where 'k.value' defines the number of frequent values that is required to be returned. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into OutputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset. maxByLength (Window) maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into OutputStream; This query observes a sliding window of 4 events, and returns the event with the maximum price. maxByLengthBatch (Window) maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into OutputStream; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset. maxbytime (Window) maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival). maxbytimebatch (Window) maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output. minByLength (Window) minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into OutputStream ; This query outputs the minimum price for a sliding length window of four events. minByLengthBatch (Window) minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into OutputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset. minbytime (Window) minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into OutputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated with the arrival and expiry of every event (after one second of its arrival). minbytimebatch (Window) minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price.","title":"4.1.0"},{"location":"api/4.1.0/#api-docs-v410","text":"","title":"API Docs - v4.1.0"},{"location":"api/4.1.0/#extrema","text":"","title":"Extrema"},{"location":"api/4.1.0/#bottomk-stream-processor","text":"bottomK counts the frequency of different values for a specified attribute, and returns the number of least frequently occurring values. The events are returned only if there is a change in the 'bottomK' results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of lowest frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of attributes that are required to be returned as the ones with the lowest frequencies. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of attributes that are required to be returned as the ones with the lowest frequencies. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:bottomK(item, 3) insert all events into OutputStream; This query returns the three items with the lowest frequency counts.","title":"bottomK (Stream Processor)"},{"location":"api/4.1.0/#bottomklengthbatch-stream-processor","text":"bottomKLengthBatch counts the frequency of different values of a specified attribute inside a batch window, and returns the number of least frequently occurring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' is the function parameter that denotes the number of bottom frequencies considered. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into OutputStream; This function collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are returned to the 'OutputStream', and the batch window is reset.","title":"bottomKLengthBatch (Stream Processor)"},{"location":"api/4.1.0/#bottomktimebatch-stream-processor","text":"bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occurring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occurring values that must be returned. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of least frequently occurring values that must be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into OutputStream; This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset.","title":"bottomKTimeBatch (Stream Processor)"},{"location":"api/4.1.0/#kalmanminmax-stream-processor","text":"kalmanMinMax uses the Kalman filter to smooth the values of the time series in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum values for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into OutputStream; This function returns the minimum value of a set of price values, to the output stream.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/4.1.0/#kernelminmax-stream-processor","text":"kernelMinMax uses Gaussian Kernel to smooth values of the series within the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum values for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This parameter can denote the minimum value, maximum value or both minimum and maximum values. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:kernelMinMax(price, 3, 7, ?max?) select * insert into OutputStream; This query returns the maximum values for a set of price values while the bandwidth of the Gaussian Kernel calculation is three and the length of the window is seven.","title":"kernelMinMax (Stream Processor)"},{"location":"api/4.1.0/#minmax-stream-processor","text":"minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from InputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into OutputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from InputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into OutputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from InputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into OutputStream; This query returns both the minimum values and the maximum values found within a set of price values.","title":"minMax (Stream Processor)"},{"location":"api/4.1.0/#topk-stream-processor","text":"topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of frequent values that should be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, of 1 = N = k.value, where 'k.value' defines the number of frequent values that should be returned. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:topK(item, 3) insert all events into OutputStream; This query emits the three items with the highest frequency counts.","title":"topK (Stream Processor)"},{"location":"api/4.1.0/#topklengthbatch-stream-processor","text":"topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold values within the range, of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into OutputStream; This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKLengthBatch (Stream Processor)"},{"location":"api/4.1.0/#topktimebatch-stream-processor","text":"topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window for which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of frequent values that is required to be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range 1 = N = k.value, where 'k.value' defines the number of frequent values that is required to be returned. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into OutputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKTimeBatch (Stream Processor)"},{"location":"api/4.1.0/#maxbylength-window","text":"maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into OutputStream; This query observes a sliding window of 4 events, and returns the event with the maximum price.","title":"maxByLength (Window)"},{"location":"api/4.1.0/#maxbylengthbatch-window","text":"maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into OutputStream; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset.","title":"maxByLengthBatch (Window)"},{"location":"api/4.1.0/#maxbytime-window","text":"maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival).","title":"maxbytime (Window)"},{"location":"api/4.1.0/#maxbytimebatch-window","text":"maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output.","title":"maxbytimebatch (Window)"},{"location":"api/4.1.0/#minbylength-window","text":"minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into OutputStream ; This query outputs the minimum price for a sliding length window of four events.","title":"minByLength (Window)"},{"location":"api/4.1.0/#minbylengthbatch-window","text":"minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into OutputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset.","title":"minByLengthBatch (Window)"},{"location":"api/4.1.0/#minbytime-window","text":"minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into OutputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated with the arrival and expiry of every event (after one second of its arrival).","title":"minbytime (Window)"},{"location":"api/4.1.0/#minbytimebatch-window","text":"minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price.","title":"minbytimebatch (Window)"},{"location":"api/4.1.1/","text":"API Docs - v4.1.1 Extrema bottomK (Stream Processor) bottomK counts the frequency of different values for a specified attribute, and returns the number of least frequently occurring values. The events are returned only if there is a change in the 'bottomK' results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of lowest frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of attributes that are required to be returned as the ones with the lowest frequencies. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of attributes that are required to be returned as the ones with the lowest frequencies. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:bottomK(item, 3) insert all events into OutputStream; This query returns the three items with the lowest frequency counts. bottomKLengthBatch (Stream Processor) bottomKLengthBatch counts the frequency of different values of a specified attribute inside a batch window, and returns the number of least frequently occurring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' is the function parameter that denotes the number of bottom frequencies considered. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into OutputStream; This function collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are returned to the 'OutputStream', and the batch window is reset. bottomKTimeBatch (Stream Processor) bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occurring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occurring values that must be returned. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of least frequently occurring values that must be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into OutputStream; This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset. kalmanMinMax (Stream Processor) kalmanMinMax uses the Kalman filter to smooth the values of the time series in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum values for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into OutputStream; This function returns the minimum value of a set of price values, to the output stream. kernelMinMax (Stream Processor) kernelMinMax uses Gaussian Kernel to smooth values of the series within the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum values for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This parameter can denote the minimum value, maximum value or both minimum and maximum values. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:kernelMinMax(price, 3, 7, ?max?) select * insert into OutputStream; This query returns the maximum values for a set of price values while the bandwidth of the Gaussian Kernel calculation is three and the length of the window is seven. minMax (Stream Processor) minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from InputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into OutputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from InputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into OutputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from InputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into OutputStream; This query returns both the minimum values and the maximum values found within a set of price values. topK (Stream Processor) topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of frequent values that should be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, of 1 = N = k.value, where 'k.value' defines the number of frequent values that should be returned. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:topK(item, 3) insert all events into OutputStream; This query emits the three items with the highest frequency counts. topKLengthBatch (Stream Processor) topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold values within the range, of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into OutputStream; This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset. topKTimeBatch (Stream Processor) topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window for which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of frequent values that is required to be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range 1 = N = k.value, where 'k.value' defines the number of frequent values that is required to be returned. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into OutputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset. maxByLength (Window) maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into OutputStream; This query observes a sliding window of 4 events, and returns the event with the maximum price. maxByLengthBatch (Window) maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into OutputStream; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset. maxbytime (Window) maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival). maxbytimebatch (Window) maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output. minByLength (Window) minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into OutputStream ; This query outputs the minimum price for a sliding length window of four events. minByLengthBatch (Window) minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into OutputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset. minbytime (Window) minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into OutputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated with the arrival and expiry of every event (after one second of its arrival). minbytimebatch (Window) minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price.","title":"4.1.1"},{"location":"api/4.1.1/#api-docs-v411","text":"","title":"API Docs - v4.1.1"},{"location":"api/4.1.1/#extrema","text":"","title":"Extrema"},{"location":"api/4.1.1/#bottomk-stream-processor","text":"bottomK counts the frequency of different values for a specified attribute, and returns the number of least frequently occurring values. The events are returned only if there is a change in the 'bottomK' results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of lowest frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of attributes that are required to be returned as the ones with the lowest frequencies. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of attributes that are required to be returned as the ones with the lowest frequencies. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:bottomK(item, 3) insert all events into OutputStream; This query returns the three items with the lowest frequency counts.","title":"bottomK (Stream Processor)"},{"location":"api/4.1.1/#bottomklengthbatch-stream-processor","text":"bottomKLengthBatch counts the frequency of different values of a specified attribute inside a batch window, and returns the number of least frequently occurring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' is the function parameter that denotes the number of bottom frequencies considered. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into OutputStream; This function collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are returned to the 'OutputStream', and the batch window is reset.","title":"bottomKLengthBatch (Stream Processor)"},{"location":"api/4.1.1/#bottomktimebatch-stream-processor","text":"bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occurring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occurring values that must be returned. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of least frequently occurring values that must be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into OutputStream; This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset.","title":"bottomKTimeBatch (Stream Processor)"},{"location":"api/4.1.1/#kalmanminmax-stream-processor","text":"kalmanMinMax uses the Kalman filter to smooth the values of the time series in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum values for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into OutputStream; This function returns the minimum value of a set of price values, to the output stream.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/4.1.1/#kernelminmax-stream-processor","text":"kernelMinMax uses Gaussian Kernel to smooth values of the series within the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum values for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This parameter can denote the minimum value, maximum value or both minimum and maximum values. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:kernelMinMax(price, 3, 7, ?max?) select * insert into OutputStream; This query returns the maximum values for a set of price values while the bandwidth of the Gaussian Kernel calculation is three and the length of the window is seven.","title":"kernelMinMax (Stream Processor)"},{"location":"api/4.1.1/#minmax-stream-processor","text":"minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from InputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into OutputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from InputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into OutputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from InputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into OutputStream; This query returns both the minimum values and the maximum values found within a set of price values.","title":"minMax (Stream Processor)"},{"location":"api/4.1.1/#topk-stream-processor","text":"topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of frequent values that should be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, of 1 = N = k.value, where 'k.value' defines the number of frequent values that should be returned. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:topK(item, 3) insert all events into OutputStream; This query emits the three items with the highest frequency counts.","title":"topK (Stream Processor)"},{"location":"api/4.1.1/#topklengthbatch-stream-processor","text":"topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold values within the range, of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into OutputStream; This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKLengthBatch (Stream Processor)"},{"location":"api/4.1.1/#topktimebatch-stream-processor","text":"topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window for which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of frequent values that is required to be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range 1 = N = k.value, where 'k.value' defines the number of frequent values that is required to be returned. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into OutputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKTimeBatch (Stream Processor)"},{"location":"api/4.1.1/#maxbylength-window","text":"maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into OutputStream; This query observes a sliding window of 4 events, and returns the event with the maximum price.","title":"maxByLength (Window)"},{"location":"api/4.1.1/#maxbylengthbatch-window","text":"maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into OutputStream; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset.","title":"maxByLengthBatch (Window)"},{"location":"api/4.1.1/#maxbytime-window","text":"maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival).","title":"maxbytime (Window)"},{"location":"api/4.1.1/#maxbytimebatch-window","text":"maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output.","title":"maxbytimebatch (Window)"},{"location":"api/4.1.1/#minbylength-window","text":"minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into OutputStream ; This query outputs the minimum price for a sliding length window of four events.","title":"minByLength (Window)"},{"location":"api/4.1.1/#minbylengthbatch-window","text":"minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into OutputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset.","title":"minByLengthBatch (Window)"},{"location":"api/4.1.1/#minbytime-window","text":"minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into OutputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated with the arrival and expiry of every event (after one second of its arrival).","title":"minbytime (Window)"},{"location":"api/4.1.1/#minbytimebatch-window","text":"minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price.","title":"minbytimebatch (Window)"},{"location":"api/5.0.0/","text":"API Docs - v5.0.0 Tested Siddhi Core version: 5.1.2 It could also support other Siddhi Core minor versions. Extrema bottomK (Stream Processor) bottomK counts the frequency of different values for a specified attribute, and returns the number of least frequently occurring values. The events are returned only if there is a change in the 'bottomK' results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of lowest frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of attributes that are required to be returned as the ones with the lowest frequencies. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of attributes that are required to be returned as the ones with the lowest frequencies. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:bottomK(item, 3) insert all events into OutputStream; This query returns the three items with the lowest frequency counts. bottomKLengthBatch (Stream Processor) bottomKLengthBatch counts the frequency of different values of a specified attribute inside a batch window, and returns the number of least frequently occurring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' is the function parameter that denotes the number of bottom frequencies considered. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into OutputStream; This function collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are returned to the 'OutputStream', and the batch window is reset. bottomKTimeBatch (Stream Processor) bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occurring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occurring values that must be returned. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of least frequently occurring values that must be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into OutputStream; This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset. kalmanMinMax (Stream Processor) kalmanMinMax uses the Kalman filter to smooth the values of the time series in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum values for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into OutputStream; This function returns the minimum value of a set of price values, to the output stream. kernelMinMax (Stream Processor) kernelMinMax uses Gaussian Kernel to smooth values of the series within the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum values for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This parameter can denote the minimum value, maximum value or both minimum and maximum values. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:kernelMinMax(price, 3, 7, \u2018max\u2019) select * insert into OutputStream; This query returns the maximum values for a set of price values while the bandwidth of the Gaussian Kernel calculation is three and the length of the window is seven. minMax (Stream Processor) minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from InputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into OutputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from InputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into OutputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from InputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into OutputStream; This query returns both the minimum values and the maximum values found within a set of price values. topK (Stream Processor) topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of frequent values that should be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, of 1 = N = k.value, where 'k.value' defines the number of frequent values that should be returned. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:topK(item, 3) insert all events into OutputStream; This query emits the three items with the highest frequency counts. topKLengthBatch (Stream Processor) topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold values within the range, of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into OutputStream; This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset. topKTimeBatch (Stream Processor) topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window for which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of frequent values that is required to be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range 1 = N = k.value, where 'k.value' defines the number of frequent values that is required to be returned. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into OutputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset. maxByLength (Window) maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into OutputStream; This query observes a sliding window of 4 events, and returns the event with the maximum price. maxByLengthBatch (Window) maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into OutputStream; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset. maxbytime (Window) maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival). maxbytimebatch (Window) maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output. minByLength (Window) minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into OutputStream ; This query outputs the minimum price for a sliding length window of four events. minByLengthBatch (Window) minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into OutputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset. minbytime (Window) minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into OutputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated with the arrival and expiry of every event (after one second of its arrival). minbytimebatch (Window) minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price.","title":"5.0.0"},{"location":"api/5.0.0/#api-docs-v500","text":"Tested Siddhi Core version: 5.1.2 It could also support other Siddhi Core minor versions.","title":"API Docs - v5.0.0"},{"location":"api/5.0.0/#extrema","text":"","title":"Extrema"},{"location":"api/5.0.0/#bottomk-stream-processor","text":"bottomK counts the frequency of different values for a specified attribute, and returns the number of least frequently occurring values. The events are returned only if there is a change in the 'bottomK' results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of lowest frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of attributes that are required to be returned as the ones with the lowest frequencies. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of attributes that are required to be returned as the ones with the lowest frequencies. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:bottomK(item, 3) insert all events into OutputStream; This query returns the three items with the lowest frequency counts.","title":"bottomK (Stream Processor)"},{"location":"api/5.0.0/#bottomklengthbatch-stream-processor","text":"bottomKLengthBatch counts the frequency of different values of a specified attribute inside a batch window, and returns the number of least frequently occurring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' is the function parameter that denotes the number of bottom frequencies considered. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into OutputStream; This function collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are returned to the 'OutputStream', and the batch window is reset.","title":"bottomKLengthBatch (Stream Processor)"},{"location":"api/5.0.0/#bottomktimebatch-stream-processor","text":"bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occurring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occurring values that must be returned. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of least frequently occurring values that must be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into OutputStream; This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset.","title":"bottomKTimeBatch (Stream Processor)"},{"location":"api/5.0.0/#kalmanminmax-stream-processor","text":"kalmanMinMax uses the Kalman filter to smooth the values of the time series in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum values for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into OutputStream; This function returns the minimum value of a set of price values, to the output stream.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/5.0.0/#kernelminmax-stream-processor","text":"kernelMinMax uses Gaussian Kernel to smooth values of the series within the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum values for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This parameter can denote the minimum value, maximum value or both minimum and maximum values. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:kernelMinMax(price, 3, 7, \u2018max\u2019) select * insert into OutputStream; This query returns the maximum values for a set of price values while the bandwidth of the Gaussian Kernel calculation is three and the length of the window is seven.","title":"kernelMinMax (Stream Processor)"},{"location":"api/5.0.0/#minmax-stream-processor","text":"minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from InputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into OutputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from InputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into OutputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from InputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into OutputStream; This query returns both the minimum values and the maximum values found within a set of price values.","title":"minMax (Stream Processor)"},{"location":"api/5.0.0/#topk-stream-processor","text":"topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of frequent values that should be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, of 1 = N = k.value, where 'k.value' defines the number of frequent values that should be returned. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:topK(item, 3) insert all events into OutputStream; This query emits the three items with the highest frequency counts.","title":"topK (Stream Processor)"},{"location":"api/5.0.0/#topklengthbatch-stream-processor","text":"topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold values within the range, of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into OutputStream; This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKLengthBatch (Stream Processor)"},{"location":"api/5.0.0/#topktimebatch-stream-processor","text":"topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window for which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of frequent values that is required to be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range 1 = N = k.value, where 'k.value' defines the number of frequent values that is required to be returned. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into OutputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKTimeBatch (Stream Processor)"},{"location":"api/5.0.0/#maxbylength-window","text":"maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into OutputStream; This query observes a sliding window of 4 events, and returns the event with the maximum price.","title":"maxByLength (Window)"},{"location":"api/5.0.0/#maxbylengthbatch-window","text":"maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into OutputStream; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset.","title":"maxByLengthBatch (Window)"},{"location":"api/5.0.0/#maxbytime-window","text":"maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival).","title":"maxbytime (Window)"},{"location":"api/5.0.0/#maxbytimebatch-window","text":"maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output.","title":"maxbytimebatch (Window)"},{"location":"api/5.0.0/#minbylength-window","text":"minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into OutputStream ; This query outputs the minimum price for a sliding length window of four events.","title":"minByLength (Window)"},{"location":"api/5.0.0/#minbylengthbatch-window","text":"minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into OutputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset.","title":"minByLengthBatch (Window)"},{"location":"api/5.0.0/#minbytime-window","text":"minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into OutputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated with the arrival and expiry of every event (after one second of its arrival).","title":"minbytime (Window)"},{"location":"api/5.0.0/#minbytimebatch-window","text":"minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price.","title":"minbytimebatch (Window)"},{"location":"api/latest/","text":"API Docs - v5.0.0 Tested Siddhi Core version: 5.1.2 It could also support other Siddhi Core minor versions. Extrema bottomK (Stream Processor) bottomK counts the frequency of different values for a specified attribute, and returns the number of least frequently occurring values. The events are returned only if there is a change in the 'bottomK' results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of lowest frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of attributes that are required to be returned as the ones with the lowest frequencies. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of attributes that are required to be returned as the ones with the lowest frequencies. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:bottomK(item, 3) insert all events into OutputStream; This query returns the three items with the lowest frequency counts. bottomKLengthBatch (Stream Processor) bottomKLengthBatch counts the frequency of different values of a specified attribute inside a batch window, and returns the number of least frequently occurring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' is the function parameter that denotes the number of bottom frequencies considered. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into OutputStream; This function collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are returned to the 'OutputStream', and the batch window is reset. bottomKTimeBatch (Stream Processor) bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occurring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occurring values that must be returned. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of least frequently occurring values that must be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into OutputStream; This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset. kalmanMinMax (Stream Processor) kalmanMinMax uses the Kalman filter to smooth the values of the time series in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum values for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into OutputStream; This function returns the minimum value of a set of price values, to the output stream. kernelMinMax (Stream Processor) kernelMinMax uses Gaussian Kernel to smooth values of the series within the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum values for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This parameter can denote the minimum value, maximum value or both minimum and maximum values. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:kernelMinMax(price, 3, 7, \u2018max\u2019) select * insert into OutputStream; This query returns the maximum values for a set of price values while the bandwidth of the Gaussian Kernel calculation is three and the length of the window is seven. minMax (Stream Processor) minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from InputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into OutputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from InputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into OutputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from InputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into OutputStream; This query returns both the minimum values and the maximum values found within a set of price values. topK (Stream Processor) topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of frequent values that should be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, of 1 = N = k.value, where 'k.value' defines the number of frequent values that should be returned. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:topK(item, 3) insert all events into OutputStream; This query emits the three items with the highest frequency counts. topKLengthBatch (Stream Processor) topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold values within the range, of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into OutputStream; This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset. topKTimeBatch (Stream Processor) topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window for which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of frequent values that is required to be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range 1 = N = k.value, where 'k.value' defines the number of frequent values that is required to be returned. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into OutputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset. maxByLength (Window) maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into OutputStream; This query observes a sliding window of 4 events, and returns the event with the maximum price. maxByLengthBatch (Window) maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into OutputStream; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset. maxbytime (Window) maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival). maxbytimebatch (Window) maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output. minByLength (Window) minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into OutputStream ; This query outputs the minimum price for a sliding length window of four events. minByLengthBatch (Window) minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into OutputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset. minbytime (Window) minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into OutputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated with the arrival and expiry of every event (after one second of its arrival). minbytimebatch (Window) minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price.","title":"latest"},{"location":"api/latest/#api-docs-v500","text":"Tested Siddhi Core version: 5.1.2 It could also support other Siddhi Core minor versions.","title":"API Docs - v5.0.0"},{"location":"api/latest/#extrema","text":"","title":"Extrema"},{"location":"api/latest/#bottomk-stream-processor","text":"bottomK counts the frequency of different values for a specified attribute, and returns the number of least frequently occurring values. The events are returned only if there is a change in the 'bottomK' results for each chunk of received events. Syntax extrema:bottomK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of lowest frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of attributes that are required to be returned as the ones with the lowest frequencies. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of attributes that are required to be returned as the ones with the lowest frequencies. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:bottomK(item, 3) insert all events into OutputStream; This query returns the three items with the lowest frequency counts.","title":"bottomK (Stream Processor)"},{"location":"api/latest/#bottomklengthbatch-stream-processor","text":"bottomKLengthBatch counts the frequency of different values of a specified attribute inside a batch window, and returns the number of least frequently occurring values. The bottom K frequency values are returned per batch. Syntax extrema:bottomKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window observed. INT No No k.value The number of bottom frequencies required. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' is the function parameter that denotes the number of bottom frequencies considered. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:bottomKLengthBatch(item, 6, 3) insert all events into OutputStream; This function collects a batch of six events. Once the batch window is full, the three items with the lowest frequency are returned to the 'OutputStream', and the batch window is reset.","title":"bottomKLengthBatch (Stream Processor)"},{"location":"api/latest/#bottomktimebatch-stream-processor","text":"bottomKTimeBatch counts the frequency of different values for a specified attribute inside a time window, and outputs a specified number of least frequently occurring values. Events are output only if there is a change in the bottomK results for each chunk of received events. Syntax extrema:bottomKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window during which the frequency should be calculated. INT LONG No No k.value The number of least frequently occurring values that must be returned. INT No No Extra Return Attributes Name Description Possible Types bottomNElement The value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of least frequently occurring values that must be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT bottomNFrequency The frequency of the value of the attribute that has the nth lowest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:bottomKTimeBatch(item, 1 sec, 3) insert all events into OutputStream; This query collects a batch of events during a time window of one second. Once the window is full, the three items with the lowest frequency are output and the window is reset.","title":"bottomKTimeBatch (Stream Processor)"},{"location":"api/latest/#kalmanminmax-stream-processor","text":"kalmanMinMax uses the Kalman filter to smooth the values of the time series in the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum values for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kalmanMinMax( INT|LONG|FLOAT|DOUBLE attribute, DOUBLE q, DOUBLE r, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT LONG FLOAT DOUBLE No No q The standard deviation of the process noise. DOUBLE No No r The standard deviation of the measurement noise. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This can be min , max or minmax . min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:kalmanMinMax(price, 0.000001,0.0001, 25, min )insert all events into OutputStream; This function returns the minimum value of a set of price values, to the output stream.","title":"kalmanMinMax (Stream Processor)"},{"location":"api/latest/#kernelminmax-stream-processor","text":"kernelMinMax uses Gaussian Kernel to smooth values of the series within the given window size, and then determines the maxima and minima of that set of values. It returns the events with the minimum and/or maximum values for the specified attribute within the given window length, with the extrema type as min or max as relevant. Syntax extrema:kernelMinMax( INT|FLOAT|DOUBLE|LONG attribute, DOUBLE bandwidth, INT window.size, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or maximum value is required. INT FLOAT DOUBLE LONG No No bandwidth The bandwidth of the Gaussian Kernel calculation. DOUBLE No No window.size The length of the window within which the minimum and/or the maximum value for the given window should be identified. INT No No extrema.type This parameter can denote the minimum value, maximum value or both minimum and maximum values. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:kernelMinMax(price, 3, 7, \u2018max\u2019) select * insert into OutputStream; This query returns the maximum values for a set of price values while the bandwidth of the Gaussian Kernel calculation is three and the length of the window is seven.","title":"kernelMinMax (Stream Processor)"},{"location":"api/latest/#minmax-stream-processor","text":"minMax finds the minimum and/or the maximum value within a given length window (maxPreBound+maxPostBound), where following conditions are met. For minimum: An event where the value for the specified attribute is greater by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the minimum value. An event where the value for the specified attribute is greater by the percentage specified as the postBoundChange must have arrived within the maxPostBound length window after the event with the minimum value. For maximum: An event where the value for the specified attribute is less by the percentage specified as the preBoundChange must have arrived within the maxPreBound length window before the event with the maximum value. An event where the value for the specified attribute is less by the percentage specified as the postBoundChange must have arrived within the maxPreBound length window after the event with the maximum value. The extension returns the events with the minimum and/or maximum for the specified attribute within the given window length, with the extrema type as min or max as relevant. These events are returned with the following additional parameters. preBound : The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPreBound window. postBound: The actual distance between the minimum/maximum value and the threshold value. This value must be within the MaxPostBound window. Syntax extrema:minMax( INT|FLOAT|DOUBLE|LONG attribute, INT max.pre.bound, INT max.post.bound, DOUBLE pre.bound.change, DOUBLE post.bound.change, STRING extrema.type) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum and/or the maximum value is required. INT FLOAT DOUBLE LONG No No max.pre.bound The maximum pre window length to be considered (before the min/max event). INT No No max.post.bound The maximum post window length to be considered (after the min/max event). INT No No pre.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window before the maximum value, and the maximum value. DOUBLE No No post.bound.change The threshold value for the percentage difference between the value that occurred in the maxPreBound length window after the maximum value, and the maximum value. DOUBLE No No extrema.type This can be min, max or minmax. min : If this is specified, minimum values are identified within the given window length, and they are returned with min as their extrema type. max : If this is specified, maximum values are identified within the given window length, and they are returned with max as their extrema type. minmax : If this is specified, both minimum and maximum values are identified within the given window length and returned. The extrema type is specified as min for the minimum events, and as max for the maximum events. STRING No No Examples EXAMPLE 1 from InputStream#extrema:minMax(price, 4, 4, 1, 2, max ) select * insert into OutputStream; This query returns the maximum values found within a set of price values. EXAMPLE 2 from InputStream#extrema:minMax(price, 4, 4, 1, 2, min ) select * insert into OutputStream; This query returns the minimum values found within a set of price values. EXAMPLE 3 from InputStream#extrema:minMax(price, 4, 4, 1, 2, minmax ) select * insert into OutputStream; This query returns both the minimum values and the maximum values found within a set of price values.","title":"minMax (Stream Processor)"},{"location":"api/latest/#topk-stream-processor","text":"topK counts the frequency of different values of a specified attribute, and emits the (k) number of values with the highest frequency. Syntax extrema:topK( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of frequent values that should be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, of 1 = N = k.value, where 'k.value' defines the number of frequent values that should be returned. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:topK(item, 3) insert all events into OutputStream; This query emits the three items with the highest frequency counts.","title":"topK (Stream Processor)"},{"location":"api/latest/#topklengthbatch-stream-processor","text":"topKLengthBatch counts the frequency of different values of a specified attribute, within a batch window of a specified length, and emits the (k) number of values with the highest frequency. Syntax extrema:topKLengthBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT window.length, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No window.length The length of the window. INT No No k.value The number of frequent values that should be emitted as the output (e.g., if2 is specified, this extension returns the two attribute values (for the specifiedattribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' is defined as the function parameter. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold values within the range, of 1 = N = k.value, where k.value is defined as the function parameter. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:topKLengthBatch(item, 6, 3) insert all events into OutputStream; This query collects a batch of six events. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKLengthBatch (Stream Processor)"},{"location":"api/latest/#topktimebatch-stream-processor","text":"topKTimeBatch counts the frequency of different values of a specified attribute within a time window, and emits the (k) number of values with the highest frequency. Syntax extrema:topKTimeBatch( INT|LONG|FLOAT|DOUBLE|STRING|BOOL|OBJECT attribute, INT|LONG time.window, INT k.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the frequency is counted. INT LONG FLOAT DOUBLE STRING BOOL OBJECT No No time.window The time window for which the frequency should be calculated. INT LONG No No k.value The number of frequent values that should be emitted as the output (e.g., if 2 is specified, this extension returns the two attribute values (for the specified attribute) that have the highest frequency. INT No No Extra Return Attributes Name Description Possible Types topNElement The value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range, 1 = N = k.value, where 'k.value' defines the number of frequent values that is required to be returned. INT LONG FLOAT DOUBLE STRING BOOL OBJECT topNFrequency The frequency of the value of the attribute that has the nth highest frequency. Here, N is an integer that can hold any value within the range 1 = N = k.value, where 'k.value' defines the number of frequent values that is required to be returned. LONG Examples EXAMPLE 1 define stream InputStream (item string, price long); from InputStream#extrema:topKTimeBatch(item, 1 sec, 3) insert all events into OutputStream; This query counts the frequency of the values for the item attribute within a time window of one second, and emits the 3 items. A batch of one second is collected. Once the window is full, the three items with the highest frequency are emitted and the window is reset.","title":"topKTimeBatch (Stream Processor)"},{"location":"api/latest/#maxbylength-window","text":"maxByLength returns the event with the maximum value for the given attribute in the specified sliding window. Syntax extrema:maxByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByLength(price, 4) select symbol,price,volume insert into OutputStream; This query observes a sliding window of 4 events, and returns the event with the maximum price.","title":"maxByLength (Window)"},{"location":"api/latest/#maxbylengthbatch-window","text":"maxByLengthBatch calculates and returns the maximum value of a specified attribute inside a batch window. Syntax extrema:maxByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch observed. INT No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByLengthBatch(price, 4) select symbol,price,volume insert into OutputStream; This query collects a batch of 4 events. Once the window is full, the item with the maximum price in the batch is returned as the output, and the window is reset.","title":"maxByLengthBatch (Window)"},{"location":"api/latest/#maxbytime-window","text":"maxbytime calculates the maximum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:maxbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByTime(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a sliding time window of 1 second. This output is updated for every event arrival and expiry (after 1 second of its arrival).","title":"maxbytime (Window)"},{"location":"api/latest/#maxbytimebatch-window","text":"maxbytimebatch calculates the maximum value of a specified attribute within a time window, and emits it. Syntax extrema:maxbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the maximum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:maxByTimeBatch(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset, and the event with the maximum price is output.","title":"maxbytimebatch (Window)"},{"location":"api/latest/#minbylength-window","text":"minByLength derives the minimum value for the given attribute in the specified sliding window. Syntax extrema:minByLength( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG sliding.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No sliding.window.length The length of the sliding window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByLength(price, 4) select symbol,price,volume insert into OutputStream ; This query outputs the minimum price for a sliding length window of four events.","title":"minByLength (Window)"},{"location":"api/latest/#minbylengthbatch-window","text":"minByLengthBatch calculates the minimum value of a specified attribute inside a batch window and emits it. Syntax extrema:minByLengthBatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No batch.length The length of the batch involved. INT No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByLengthBatch(price, 4) select symbol,price,volume insert into OutputStream ; This query collects a batch of four events. Once the batch window is full, it outputs the item with the minimum price in the batch. Then the window is reset.","title":"minByLengthBatch (Window)"},{"location":"api/latest/#minbytime-window","text":"minbytime calculates the minimum value of a specified attribute within a sliding time window and emits it. The output is updated for every event arrival and expiry during the time.window.length specified. Syntax extrema:minbytime( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.window.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.window.length The length of the sliding time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByTime(price, 1 sec) select symbol,price,volume insert into OutputStream; This query outputs the event with the minimum price for a sliding time window of one second. This output is updated with the arrival and expiry of every event (after one second of its arrival).","title":"minbytime (Window)"},{"location":"api/latest/#minbytimebatch-window","text":"minbytimebatch calculates the minimum value of a specified attribute within a time window, and emits it. Syntax extrema:minbytimebatch( INT|FLOAT|DOUBLE|LONG|STRING attribute, INT|LONG time.batch.length) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic attribute The attribute of which the minimum value is required. INT FLOAT DOUBLE LONG STRING No No time.batch.length The length of the time window observed. INT LONG No No Examples EXAMPLE 1 define stream CseEventStream (symbol string, price float, volume int); from CseEventStream#window.extrema:minByTimeBatch(price, 1 sec) select symbol,price,volume insert into OutputStream ; This query considers a time-batch window of 1 second. After every second, the window is reset and it emits the event with the minimum price.","title":"minbytimebatch (Window)"}]}